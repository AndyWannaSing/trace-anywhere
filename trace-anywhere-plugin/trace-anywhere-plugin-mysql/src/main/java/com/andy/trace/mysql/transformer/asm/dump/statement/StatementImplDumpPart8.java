package com.andy.trace.mysql.transformer.asm.dump.statement;

import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

import static org.objectweb.asm.Opcodes.AASTORE;
import static org.objectweb.asm.Opcodes.ACC_FINAL;
import static org.objectweb.asm.Opcodes.ACC_PRIVATE;
import static org.objectweb.asm.Opcodes.ACC_PROTECTED;
import static org.objectweb.asm.Opcodes.ACC_PUBLIC;
import static org.objectweb.asm.Opcodes.ACC_STATIC;
import static org.objectweb.asm.Opcodes.ACC_VOLATILE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ANEWARRAY;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.ARRAYLENGTH;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BASTORE;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.CHECKCAST;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.DUP_X1;
import static org.objectweb.asm.Opcodes.GETFIELD;
import static org.objectweb.asm.Opcodes.GETSTATIC;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.I2B;
import static org.objectweb.asm.Opcodes.I2L;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_5;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFGE;
import static org.objectweb.asm.Opcodes.IFGT;
import static org.objectweb.asm.Opcodes.IFLE;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IFNONNULL;
import static org.objectweb.asm.Opcodes.IFNULL;
import static org.objectweb.asm.Opcodes.IF_ACMPEQ;
import static org.objectweb.asm.Opcodes.IF_ACMPNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.IF_ICMPLE;
import static org.objectweb.asm.Opcodes.IF_ICMPNE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.IMUL;
import static org.objectweb.asm.Opcodes.INSTANCEOF;
import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.ISUB;
import static org.objectweb.asm.Opcodes.L2I;
import static org.objectweb.asm.Opcodes.LADD;
import static org.objectweb.asm.Opcodes.LAND;
import static org.objectweb.asm.Opcodes.LASTORE;
import static org.objectweb.asm.Opcodes.LCMP;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LCONST_1;
import static org.objectweb.asm.Opcodes.LDIV;
import static org.objectweb.asm.Opcodes.LLOAD;
import static org.objectweb.asm.Opcodes.LRETURN;
import static org.objectweb.asm.Opcodes.LSTORE;
import static org.objectweb.asm.Opcodes.LSUB;
import static org.objectweb.asm.Opcodes.LUSHR;
import static org.objectweb.asm.Opcodes.MONITORENTER;
import static org.objectweb.asm.Opcodes.MONITOREXIT;
import static org.objectweb.asm.Opcodes.NEWARRAY;
import static org.objectweb.asm.Opcodes.POP;
import static org.objectweb.asm.Opcodes.PUTFIELD;
import static org.objectweb.asm.Opcodes.RETURN;
import static org.objectweb.asm.Opcodes.SIPUSH;
import static org.objectweb.asm.Opcodes.T_BYTE;
import static org.objectweb.asm.Opcodes.T_LONG;
import static org.objectweb.asm.TypeReference.NEW;
public class StatementImplDumpPart8 {
    public static void dump(ClassWriter classWriter) {
        MethodVisitor methodVisitor;
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getResultSetType", "()I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1743, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1744, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getResultType", "()Lcom/mysql/cj/protocol/Resultset$Type;", true);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/protocol/Resultset$Type", "getIntValue", "()I", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(IRETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1745, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ATHROW);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label5, 0);
            methodVisitor.visitMaxs(2, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getUpdateCount", "()I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1750, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getLargeUpdateCount", "()J", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/Util", "truncateAndConvertToInt", "(J)I", false);
            methodVisitor.visitInsn(IRETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitMaxs(2, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getWarnings", "()Ljava/sql/SQLWarning;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label2, null);
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label5, label2, null);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1755, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1757, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "isClearWarningsCalled", "()Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1758, label7);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1761, label3);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getProtocol", "()Lcom/mysql/cj/protocol/a/NativeProtocol;", false);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/protocol/a/NativeProtocol", "convertShowWarningsToSQLWarnings", "(Z)Ljava/sql/SQLWarning;", false);
            methodVisitor.visitVarInsn(ASTORE, 2);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1763, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "warningChain", "Ljava/sql/SQLWarning;");
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label9);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1764, label10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "warningChain", "Ljava/sql/SQLWarning;");
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/sql/SQLWarning", "setNextWarning", "(Ljava/sql/SQLWarning;)V", false);
            Label label11 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label11);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1766, label9);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/sql/SQLWarning"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "warningChain", "Ljava/sql/SQLWarning;");
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1769, label11);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "warningChain", "Ljava/sql/SQLWarning;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1770, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLocalVariable("pendingWarningsFromServer", "Ljava/sql/SQLWarning;", null, label8, label2, 2);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label6, label12, 0);
            methodVisitor.visitMaxs(2, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "realClose", "(ZZ)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/Exception");
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1785, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ASTORE, 3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1787, label7);
            methodVisitor.visitVarInsn(ALOAD, 3);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "isClosed", "Z");
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label9);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1788, label8);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"com/mysql/cj/jdbc/JdbcConnection"}, 0, null);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1792, label9);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "dontTrackOpenResources", "Lcom/mysql/cj/conf/RuntimeProperty;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            Label label10 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label10);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1793, label11);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "unregisterStatement", "(Lcom/mysql/cj/jdbc/JdbcStatement;)V", true);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1796, label10);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "useUsageAdvisor", "Z");
            Label label12 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label12);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1797, label13);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitJumpInsn(IFNE, label12);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(1798, label14);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getProfilerEventHandler", "()Lcom/mysql/cj/log/ProfilerEventHandler;", false);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitTypeInsn(NEW, "java/lang/Throwable");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Throwable", "<init>", "()V", false);
            methodVisitor.visitLdcInsn("Statement.63");
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(1799, label15);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(1798, label16);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/log/ProfilerEventHandler", "processEvent", "(BLcom/mysql/cj/Session;Lcom/mysql/cj/Query;Lcom/mysql/cj/protocol/Resultset;JLjava/lang/Throwable;Ljava/lang/String;)V", true);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1803, label12);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label17 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label17);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(1804, label18);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "holdResultsOpenOverClose", "Z");
            Label label19 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label19);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "dontTrackOpenResources", "Lcom/mysql/cj/conf/RuntimeProperty;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            methodVisitor.visitJumpInsn(IFNE, label19);
            methodVisitor.visitInsn(ICONST_1);
            Label label20 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label20);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitVarInsn(ISTORE, 2);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(1807, label17);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label21 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label21);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(1808, label22);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            Label label23 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label23);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1811, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "close", "()V", true);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1813, label1);
            methodVisitor.visitJumpInsn(GOTO, label23);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1812, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Exception"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(1816, label23);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "generatedKeysResults", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            Label label24 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label24);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1819, label3);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "generatedKeysResults", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "close", "()V", true);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1821, label4);
            methodVisitor.visitJumpInsn(GOTO, label24);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1820, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Exception"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(1824, label24);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "closeAllOpenResults", "()V", false);
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(1827, label21);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "clearAttributes", "()V", false);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(1829, label25);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "isClosed", "Z");
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(1831, label26);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "closeQuery", "()V", false);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(1833, label27);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(1834, label28);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "generatedKeysResults", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(1835, label29);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(1836, label30);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(1837, label31);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "warningChain", "Ljava/sql/SQLWarning;");
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(1838, label32);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "openResults", "Ljava/util/Set;");
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(1839, label33);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "batchedGeneratedKeys", "Ljava/util/ArrayList;");
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(1840, label34);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "pingTarget", "Lcom/mysql/cj/PingTarget;");
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(1841, label35);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "resultSetFactory", "Lcom/mysql/cj/jdbc/result/ResultSetFactory;");
            Label label36 = new Label();
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(1842, label36);
            methodVisitor.visitInsn(RETURN);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label6, label37, 0);
            methodVisitor.visitLocalVariable("calledExplicitly", "Z", null, label6, label37, 1);
            methodVisitor.visitLocalVariable("closeOpenResults", "Z", null, label6, label37, 2);
            methodVisitor.visitLocalVariable("locallyScopedConn", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label7, label37, 3);
            methodVisitor.visitMaxs(9, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setCursorName", "(Ljava/lang/String;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1847, label0);
            methodVisitor.visitInsn(RETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("name", "Ljava/lang/String;", null, label0, label1, 1);
            methodVisitor.visitMaxs(0, 2);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setEscapeProcessing", "(Z)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1851, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1852, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "doEscapeProcessing", "Z");
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1853, label5);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1854, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("enable", "Z", null, label4, label7, 1);
            methodVisitor.visitMaxs(2, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setFetchDirection", "(I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1858, label0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTableSwitchInsn(1000, 1002, label2, new Label[]{label1, label1, label1});
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1862, label1);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            Label label3 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1865, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitLdcInsn("Statement.5");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1867, label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label4, 0);
            methodVisitor.visitLocalVariable("direction", "I", null, label0, label4, 1);
            methodVisitor.visitMaxs(3, 2);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setFetchSize", "(I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1871, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1872, label0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IFGE, label5);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitLdcInsn(new Integer(-2147483648));
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPNE, label6);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "maxRows", "I");
            Label label7 = new Label();
            methodVisitor.visitJumpInsn(IFLE, label7);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getMaxRows", "()I", false);
            methodVisitor.visitJumpInsn(IF_ICMPLE, label7);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1873, label6);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitLdcInsn("Statement.7");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1876, label7);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "setResultFetchSize", "(I)V", true);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1877, label8);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1878, label9);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label10, 0);
            methodVisitor.visitLocalVariable("rows", "I", null, label4, label10, 1);
            methodVisitor.visitMaxs(3, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setHoldResultsOpenOverClose", "(Z)V", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            Label label5 = new Label();
            Label label6 = new Label();
            methodVisitor.visitTryCatchBlock(label4, label5, label6, "com/mysql/cj/exceptions/StatementIsClosedException");
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1883, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1884, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "holdResultsOpenOverClose", "Z");
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1885, label7);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitJumpInsn(GOTO, label5);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1888, label5);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1886, label6);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"com/mysql/cj/exceptions/StatementIsClosedException"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1889, label8);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label9, 0);
            methodVisitor.visitLocalVariable("holdResultsOpenOverClose", "Z", null, label4, label9, 1);
            methodVisitor.visitMaxs(2, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setMaxFieldSize", "(I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1893, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1894, label0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IFGE, label5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1895, label6);
            methodVisitor.visitLdcInsn("Statement.11");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1898, label5);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "maxAllowedPacket", "Lcom/mysql/cj/conf/RuntimeProperty;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1900, label7);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ILOAD, 3);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPLE, label8);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1901, label9);
            methodVisitor.visitLdcInsn("Statement.13");
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitTypeInsn(ANEWARRAY, "java/lang/Object");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitInsn(I2L);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;", false);
            methodVisitor.visitInsn(AASTORE);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1902, label10);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1901, label11);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1905, label8);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "maxFieldSize", "I");
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1906, label12);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label13 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label13);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1907, label13);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLocalVariable("maxBuf", "I", null, label7, label12, 3);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label14, 0);
            methodVisitor.visitLocalVariable("max", "I", null, label4, label14, 1);
            methodVisitor.visitMaxs(6, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setMaxRows", "(I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1911, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitInsn(I2L);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "setLargeMaxRows", "(J)V", false);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1912, label1);
            methodVisitor.visitInsn(RETURN);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label2, 0);
            methodVisitor.visitLocalVariable("max", "I", null, label0, label2, 1);
            methodVisitor.visitMaxs(3, 2);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setQueryTimeout", "(I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1916, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1917, label0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IFGE, label5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1918, label6);
            methodVisitor.visitLdcInsn("Statement.21");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1921, label5);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitIntInsn(SIPUSH, 1000);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitInsn(I2L);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "setTimeoutInMillis", "(J)V", false);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1922, label7);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1923, label8);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label9, 0);
            methodVisitor.visitLocalVariable("seconds", "I", null, label4, label9, 1);
            methodVisitor.visitMaxs(3, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(0, "setResultSetConcurrency", "(I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            Label label5 = new Label();
            Label label6 = new Label();
            methodVisitor.visitTryCatchBlock(label4, label5, label6, "com/mysql/cj/exceptions/StatementIsClosedException");
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1935, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1936, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "resultSetConcurrency", "I");
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1938, label7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/jdbc/result/ResultSetFactory");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/jdbc/result/ResultSetFactory", "<init>", "(Lcom/mysql/cj/jdbc/JdbcConnection;Lcom/mysql/cj/jdbc/StatementImpl;)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "resultSetFactory", "Lcom/mysql/cj/jdbc/result/ResultSetFactory;");
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1939, label8);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitJumpInsn(GOTO, label5);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1942, label5);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1940, label6);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"com/mysql/cj/exceptions/StatementIsClosedException"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1943, label9);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label10, 0);
            methodVisitor.visitLocalVariable("concurrencyFlag", "I", null, label4, label10, 1);
            methodVisitor.visitMaxs(5, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(0, "setResultSetType", "(Lcom/mysql/cj/protocol/Resultset$Type;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            Label label5 = new Label();
            Label label6 = new Label();
            methodVisitor.visitTryCatchBlock(label4, label5, label6, "com/mysql/cj/exceptions/StatementIsClosedException");
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1955, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1956, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "setResultType", "(Lcom/mysql/cj/protocol/Resultset$Type;)V", true);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1958, label7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/jdbc/result/ResultSetFactory");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/jdbc/result/ResultSetFactory", "<init>", "(Lcom/mysql/cj/jdbc/JdbcConnection;Lcom/mysql/cj/jdbc/StatementImpl;)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "resultSetFactory", "Lcom/mysql/cj/jdbc/result/ResultSetFactory;");
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1959, label8);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitJumpInsn(GOTO, label5);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/protocol/Resultset$Type", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1962, label5);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1960, label6);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"com/mysql/cj/exceptions/StatementIsClosedException"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1963, label9);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label10, 0);
            methodVisitor.visitLocalVariable("typeFlag", "Lcom/mysql/cj/protocol/Resultset$Type;", null, label4, label10, 1);
            methodVisitor.visitMaxs(5, 4);
            methodVisitor.visitEnd();
        }
    }
}
