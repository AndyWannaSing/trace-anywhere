package com.andy.trace.mysql.transformer.asm.dump.preparedstatement;

import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

import static org.objectweb.asm.Opcodes.AALOAD;
import static org.objectweb.asm.Opcodes.AASTORE;
import static org.objectweb.asm.Opcodes.ACC_FINAL;
import static org.objectweb.asm.Opcodes.ACC_PRIVATE;
import static org.objectweb.asm.Opcodes.ACC_PROTECTED;
import static org.objectweb.asm.Opcodes.ACC_PUBLIC;
import static org.objectweb.asm.Opcodes.ACC_STATIC;
import static org.objectweb.asm.Opcodes.ACC_SYNTHETIC;
import static org.objectweb.asm.Opcodes.ACC_VOLATILE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ANEWARRAY;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.ARRAYLENGTH;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BASTORE;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.CHECKCAST;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.DUP_X1;
import static org.objectweb.asm.Opcodes.GETFIELD;
import static org.objectweb.asm.Opcodes.GETSTATIC;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.I2B;
import static org.objectweb.asm.Opcodes.I2L;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_5;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IDIV;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFGE;
import static org.objectweb.asm.Opcodes.IFGT;
import static org.objectweb.asm.Opcodes.IFLE;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IFNONNULL;
import static org.objectweb.asm.Opcodes.IFNULL;
import static org.objectweb.asm.Opcodes.IF_ACMPEQ;
import static org.objectweb.asm.Opcodes.IF_ACMPNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.IF_ICMPLE;
import static org.objectweb.asm.Opcodes.IF_ICMPNE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.IMUL;
import static org.objectweb.asm.Opcodes.INSTANCEOF;
import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.IREM;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.ISUB;
import static org.objectweb.asm.Opcodes.L2I;
import static org.objectweb.asm.Opcodes.LADD;
import static org.objectweb.asm.Opcodes.LAND;
import static org.objectweb.asm.Opcodes.LASTORE;
import static org.objectweb.asm.Opcodes.LCMP;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LCONST_1;
import static org.objectweb.asm.Opcodes.LDIV;
import static org.objectweb.asm.Opcodes.LLOAD;
import static org.objectweb.asm.Opcodes.LRETURN;
import static org.objectweb.asm.Opcodes.LSTORE;
import static org.objectweb.asm.Opcodes.LSUB;
import static org.objectweb.asm.Opcodes.LUSHR;
import static org.objectweb.asm.Opcodes.MONITORENTER;
import static org.objectweb.asm.Opcodes.MONITOREXIT;
import static org.objectweb.asm.Opcodes.NEWARRAY;
import static org.objectweb.asm.Opcodes.POP;
import static org.objectweb.asm.Opcodes.PUTFIELD;
import static org.objectweb.asm.Opcodes.RETURN;
import static org.objectweb.asm.Opcodes.SIPUSH;
import static org.objectweb.asm.Opcodes.T_BYTE;
import static org.objectweb.asm.Opcodes.T_LONG;
import static org.objectweb.asm.TypeReference.NEW;

public class ClientPreparedStatementDumpPart3 {
    public static void dump(ClassWriter classWriter) {
        MethodVisitor methodVisitor;
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "setOneBatchedParameterSet", "(Ljava/sql/PreparedStatement;ILjava/lang/Object;)I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(587, label0);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/QueryBindings");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "getBindValues", "()[Lcom/mysql/cj/BindValue;", true);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(588, label1);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/ClientPreparedStatement");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQuery", "()Lcom/mysql/cj/Query;", false);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(589, label2);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 6);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"[Lcom/mysql/cj/BindValue;", "com/mysql/cj/QueryBindings", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ARRAYLENGTH);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label4);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(590, label5);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitIincInsn(2, 1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitInsn(AALOAD);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setFromBindValue", "(ILcom/mysql/cj/BindValue;)V", true);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(589, label6);
            methodVisitor.visitIincInsn(6, 1);
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(593, label4);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitInsn(IRETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("j", "I", null, label3, label4, 6);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label7, 0);
            methodVisitor.visitLocalVariable("batchedStatement", "Ljava/sql/PreparedStatement;", null, label0, label7, 1);
            methodVisitor.visitLocalVariable("batchedParamIndex", "I", null, label0, label7, 2);
            methodVisitor.visitLocalVariable("paramSet", "Ljava/lang/Object;", null, label0, label7, 3);
            methodVisitor.visitLocalVariable("bindValues", "[Lcom/mysql/cj/BindValue;", null, label1, label7, 4);
            methodVisitor.visitLocalVariable("batchedStatementBindings", "Lcom/mysql/cj/QueryBindings;", null, label2, label7, 5);
            methodVisitor.visitMaxs(4, 7);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "generateMultiStatementForBatch", "(I)Ljava/lang/String;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(597, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(598, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getOriginalSql", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ASTORE, 3);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(599, label5);
            methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "(I)V", false);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(601, label6);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitInsn(POP);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(603, label7);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object", "java/lang/String", "java/lang/StringBuilder", Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label9);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(604, label10);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitIntInsn(BIPUSH, 59);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(C)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitInsn(POP);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(605, label11);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitInsn(POP);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(603, label12);
            methodVisitor.visitIincInsn(5, 1);
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(608, label9);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(609, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ATHROW);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLocalVariable("i", "I", null, label8, label9, 5);
            methodVisitor.visitLocalVariable("origSql", "Ljava/lang/String;", null, label5, label2, 3);
            methodVisitor.visitLocalVariable("newStatementSql", "Ljava/lang/StringBuilder;", null, label6, label2, 4);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label13, 0);
            methodVisitor.visitLocalVariable("numBatches", "I", null, label4, label13, 1);
            methodVisitor.visitMaxs(4, 7);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "executeBatchWithMultiValuesClause", "(J)[J", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/sql/SQLException");
            Label label6 = new Label();
            Label label7 = new Label();
            Label label8 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label7, label8, null);
            Label label9 = new Label();
            methodVisitor.visitTryCatchBlock(label8, label9, label8, null);
            Label label10 = new Label();
            Label label11 = new Label();
            Label label12 = new Label();
            methodVisitor.visitTryCatchBlock(label10, label11, label12, "java/sql/SQLException");
            Label label13 = new Label();
            Label label14 = new Label();
            Label label15 = new Label();
            methodVisitor.visitTryCatchBlock(label13, label14, label15, null);
            Label label16 = new Label();
            methodVisitor.visitTryCatchBlock(label15, label16, label15, null);
            Label label17 = new Label();
            Label label18 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label17, label18, null);
            Label label19 = new Label();
            methodVisitor.visitTryCatchBlock(label15, label19, label18, null);
            Label label20 = new Label();
            Label label21 = new Label();
            Label label22 = new Label();
            methodVisitor.visitTryCatchBlock(label20, label21, label22, null);
            Label label23 = new Label();
            methodVisitor.visitTryCatchBlock(label15, label23, label22, null);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(623, label24);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(624, label20);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(626, label25);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(628, label26);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "retrieveGeneratedKeys", "Z");
            Label label27 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label27);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(629, label28);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "(I)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "batchedGeneratedKeys", "Ljava/util/ArrayList;");
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(632, label27);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "computeBatchSize", "(I)I", true);
            methodVisitor.visitVarInsn(ISTORE, 6);
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(634, label29);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 6);
            Label label30 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label30);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(635, label31);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ISTORE, 6);
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(638, label30);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(640, label32);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(641, label33);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitVarInsn(LSTORE, 9);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(642, label34);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(643, label35);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 12);
            Label label36 = new Label();
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(644, label36);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 13);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(645, label37);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 14);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(647, label38);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 15);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(651, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 6);
            Label label39 = new Label();
            methodVisitor.visitLabel(label39);
            methodVisitor.visitLineNumber(652, label39);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "prepareBatchedInsertSQL", "(Lcom/mysql/cj/jdbc/JdbcConnection;I)Lcom/mysql/cj/jdbc/ClientPreparedStatement;", false);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label40 = new Label();
            methodVisitor.visitLabel(label40);
            methodVisitor.visitLineNumber(654, label40);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "startQueryTimer", "(Lcom/mysql/cj/Query;J)Lcom/mysql/cj/CancelQueryTask;", false);
            methodVisitor.visitVarInsn(ASTORE, 13);
            Label label41 = new Label();
            methodVisitor.visitLabel(label41);
            methodVisitor.visitLineNumber(656, label41);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 6);
            Label label42 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label42);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label43 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label43);
            methodVisitor.visitLabel(label42);
            methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/jdbc/JdbcPreparedStatement", Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", "java/sql/SQLException", "[J"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitInsn(IDIV);
            methodVisitor.visitLabel(label43);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label44 = new Label();
            methodVisitor.visitLabel(label44);
            methodVisitor.visitLineNumber(658, label44);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitVarInsn(ISTORE, 16);
            Label label45 = new Label();
            methodVisitor.visitLabel(label45);
            methodVisitor.visitLineNumber(660, label45);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 17);
            Label label46 = new Label();
            methodVisitor.visitLabel(label46);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 17);
            methodVisitor.visitVarInsn(ILOAD, 16);
            methodVisitor.visitJumpInsn(IF_ICMPGE, label3);
            Label label47 = new Label();
            methodVisitor.visitLabel(label47);
            methodVisitor.visitLineNumber(661, label47);
            methodVisitor.visitVarInsn(ILOAD, 17);
            Label label48 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label48);
            methodVisitor.visitVarInsn(ILOAD, 17);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitInsn(IREM);
            methodVisitor.visitJumpInsn(IFNE, label48);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(663, label0);
            methodVisitor.visitVarInsn(LLOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "executeLargeUpdate", "()J", true);
            methodVisitor.visitInsn(LADD);
            methodVisitor.visitVarInsn(LSTORE, 9);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(666, label1);
            Label label49 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label49);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(664, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 18);
            Label label50 = new Label();
            methodVisitor.visitLabel(label50);
            methodVisitor.visitLineNumber(665, label50);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitVarInsn(ALOAD, 18);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 14);
            methodVisitor.visitLabel(label49);
            methodVisitor.visitLineNumber(668, label49);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getBatchedGeneratedKeys", "(Ljava/sql/Statement;)V", false);
            Label label51 = new Label();
            methodVisitor.visitLabel(label51);
            methodVisitor.visitLineNumber(669, label51);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "clearParameters", "()V", true);
            Label label52 = new Label();
            methodVisitor.visitLabel(label52);
            methodVisitor.visitLineNumber(670, label52);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 8);
            methodVisitor.visitLabel(label48);
            methodVisitor.visitLineNumber(674, label48);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitIincInsn(12, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setOneBatchedParameterSet", "(Ljava/sql/PreparedStatement;ILjava/lang/Object;)I", false);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label53 = new Label();
            methodVisitor.visitLabel(label53);
            methodVisitor.visitLineNumber(660, label53);
            methodVisitor.visitIincInsn(17, 1);
            methodVisitor.visitJumpInsn(GOTO, label46);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(678, label3);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(LLOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "executeLargeUpdate", "()J", true);
            methodVisitor.visitInsn(LADD);
            methodVisitor.visitVarInsn(LSTORE, 9);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(681, label4);
            Label label54 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label54);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(679, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 17);
            Label label55 = new Label();
            methodVisitor.visitLabel(label55);
            methodVisitor.visitLineNumber(680, label55);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitVarInsn(ALOAD, 17);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 14);
            methodVisitor.visitLabel(label54);
            methodVisitor.visitLineNumber(683, label54);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getBatchedGeneratedKeys", "(Ljava/sql/Statement;)V", false);
            Label label56 = new Label();
            methodVisitor.visitLabel(label56);
            methodVisitor.visitLineNumber(685, label56);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ISTORE, 6);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(687, label7);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitJumpInsn(IFNULL, label13);
            Label label57 = new Label();
            methodVisitor.visitLabel(label57);
            methodVisitor.visitLineNumber(688, label57);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "close", "()V", true);
            Label label58 = new Label();
            methodVisitor.visitLabel(label58);
            methodVisitor.visitLineNumber(689, label58);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            methodVisitor.visitJumpInsn(GOTO, label13);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(687, label8);
            methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/jdbc/JdbcPreparedStatement", Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", "java/sql/SQLException", "[J"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 19);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitVarInsn(ALOAD, 7);
            Label label59 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label59);
            Label label60 = new Label();
            methodVisitor.visitLabel(label60);
            methodVisitor.visitLineNumber(688, label60);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "close", "()V", true);
            Label label61 = new Label();
            methodVisitor.visitLabel(label61);
            methodVisitor.visitLineNumber(689, label61);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            methodVisitor.visitLabel(label59);
            methodVisitor.visitLineNumber(691, label59);
            methodVisitor.visitFrame(Opcodes.F_FULL, 18, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/jdbc/JdbcPreparedStatement", Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", "java/sql/SQLException", "[J", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 19);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(694, label13);
            methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/jdbc/JdbcPreparedStatement", Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", "java/sql/SQLException", "[J"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 6);
            Label label62 = new Label();
            methodVisitor.visitJumpInsn(IFLE, label62);
            Label label63 = new Label();
            methodVisitor.visitLabel(label63);
            methodVisitor.visitLineNumber(695, label63);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "prepareBatchedInsertSQL", "(Lcom/mysql/cj/jdbc/JdbcConnection;I)Lcom/mysql/cj/jdbc/ClientPreparedStatement;", false);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label64 = new Label();
            methodVisitor.visitLabel(label64);
            methodVisitor.visitLineNumber(697, label64);
            methodVisitor.visitVarInsn(ALOAD, 13);
            Label label65 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label65);
            Label label66 = new Label();
            methodVisitor.visitLabel(label66);
            methodVisitor.visitLineNumber(698, label66);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/CancelQueryTask", "setQueryToCancel", "(Lcom/mysql/cj/Query;)V", true);
            methodVisitor.visitLabel(label65);
            methodVisitor.visitLineNumber(701, label65);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label67 = new Label();
            methodVisitor.visitLabel(label67);
            methodVisitor.visitLineNumber(703, label67);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitJumpInsn(IF_ICMPGE, label10);
            Label label68 = new Label();
            methodVisitor.visitLabel(label68);
            methodVisitor.visitLineNumber(704, label68);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitIincInsn(12, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setOneBatchedParameterSet", "(Ljava/sql/PreparedStatement;ILjava/lang/Object;)I", false);
            methodVisitor.visitVarInsn(ISTORE, 8);
            methodVisitor.visitJumpInsn(GOTO, label67);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(708, label10);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(LLOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "executeLargeUpdate", "()J", true);
            methodVisitor.visitInsn(LADD);
            methodVisitor.visitVarInsn(LSTORE, 9);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(711, label11);
            Label label69 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label69);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(709, label12);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 16);
            Label label70 = new Label();
            methodVisitor.visitLabel(label70);
            methodVisitor.visitLineNumber(710, label70);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitVarInsn(ALOAD, 16);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 14);
            methodVisitor.visitLabel(label69);
            methodVisitor.visitLineNumber(713, label69);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getBatchedGeneratedKeys", "(Ljava/sql/Statement;)V", false);
            methodVisitor.visitLabel(label62);
            methodVisitor.visitLineNumber(716, label62);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 14);
            Label label71 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label71);
            Label label72 = new Label();
            methodVisitor.visitLabel(label72);
            methodVisitor.visitLineNumber(717, label72);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createBatchUpdateException", "(Ljava/sql/SQLException;[JLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label71);
            methodVisitor.visitLineNumber(720, label71);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitInsn(ICONST_1);
            Label label73 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPLE, label73);
            Label label74 = new Label();
            methodVisitor.visitLabel(label74);
            methodVisitor.visitLineNumber(721, label74);
            methodVisitor.visitVarInsn(LLOAD, 9);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitInsn(LCMP);
            Label label75 = new Label();
            methodVisitor.visitJumpInsn(IFLE, label75);
            methodVisitor.visitLdcInsn(new Long(-2L));
            Label label76 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label76);
            methodVisitor.visitLabel(label75);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitLabel(label76);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.LONG});
            methodVisitor.visitVarInsn(LSTORE, 16);
            Label label77 = new Label();
            methodVisitor.visitLabel(label77);
            methodVisitor.visitLineNumber(722, label77);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 18);
            Label label78 = new Label();
            methodVisitor.visitLabel(label78);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.LONG, Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 18);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label79 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label79);
            Label label80 = new Label();
            methodVisitor.visitLabel(label80);
            methodVisitor.visitLineNumber(723, label80);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitVarInsn(ILOAD, 18);
            methodVisitor.visitVarInsn(LLOAD, 16);
            methodVisitor.visitInsn(LASTORE);
            Label label81 = new Label();
            methodVisitor.visitLabel(label81);
            methodVisitor.visitLineNumber(722, label81);
            methodVisitor.visitIincInsn(18, 1);
            methodVisitor.visitJumpInsn(GOTO, label78);
            methodVisitor.visitLabel(label79);
            methodVisitor.visitLineNumber(725, label79);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            Label label82 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label82);
            methodVisitor.visitLabel(label73);
            methodVisitor.visitLineNumber(726, label73);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(LLOAD, 9);
            methodVisitor.visitInsn(LASTORE);
            methodVisitor.visitLabel(label82);
            methodVisitor.visitLineNumber(728, label82);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitVarInsn(ASTORE, 16);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(730, label14);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitJumpInsn(IFNULL, label17);
            Label label83 = new Label();
            methodVisitor.visitLabel(label83);
            methodVisitor.visitLineNumber(731, label83);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "close", "()V", true);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(735, label17);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"[J"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label84 = new Label();
            methodVisitor.visitLabel(label84);
            methodVisitor.visitLineNumber(736, label84);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "resetCancelledState", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(728, label21);
            methodVisitor.visitVarInsn(ALOAD, 16);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(730, label15);
            methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/jdbc/JdbcPreparedStatement", Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", "java/sql/SQLException", "[J"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 20);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitVarInsn(ALOAD, 7);
            Label label85 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label85);
            Label label86 = new Label();
            methodVisitor.visitLabel(label86);
            methodVisitor.visitLineNumber(731, label86);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "close", "()V", true);
            methodVisitor.visitLabel(label85);
            methodVisitor.visitLineNumber(733, label85);
            methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/jdbc/JdbcPreparedStatement", Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", "java/sql/SQLException", "[J", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 20);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(735, label18);
            methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/jdbc/JdbcPreparedStatement", Opcodes.INTEGER, Opcodes.LONG, Opcodes.INTEGER, Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", "java/sql/SQLException", "[J"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 21);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label87 = new Label();
            methodVisitor.visitLabel(label87);
            methodVisitor.visitLineNumber(736, label87);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "resetCancelledState", "()V", false);
            Label label88 = new Label();
            methodVisitor.visitLabel(label88);
            methodVisitor.visitLineNumber(737, label88);
            methodVisitor.visitVarInsn(ALOAD, 21);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(738, label22);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 22);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label23);
            methodVisitor.visitVarInsn(ALOAD, 22);
            methodVisitor.visitInsn(ATHROW);
            Label label89 = new Label();
            methodVisitor.visitLabel(label89);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label50, label49, 18);
            methodVisitor.visitLocalVariable("i", "I", null, label46, label3, 17);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label55, label54, 17);
            methodVisitor.visitLocalVariable("numberArgsToExecute", "I", null, label45, label7, 16);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label70, label69, 16);
            methodVisitor.visitLocalVariable("j", "I", null, label78, label79, 18);
            methodVisitor.visitLocalVariable("updCount", "J", null, label77, label79, 16);
            methodVisitor.visitLocalVariable("locallyScopedConn", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label25, label22, 4);
            methodVisitor.visitLocalVariable("numBatchedArgs", "I", null, label26, label22, 5);
            methodVisitor.visitLocalVariable("numValuesPerBatch", "I", null, label29, label22, 6);
            methodVisitor.visitLocalVariable("batchedStatement", "Lcom/mysql/cj/jdbc/JdbcPreparedStatement;", null, label32, label22, 7);
            methodVisitor.visitLocalVariable("batchedParamIndex", "I", null, label33, label22, 8);
            methodVisitor.visitLocalVariable("updateCountRunningTotal", "J", null, label34, label22, 9);
            methodVisitor.visitLocalVariable("numberToExecuteAsMultiValue", "I", null, label35, label22, 11);
            methodVisitor.visitLocalVariable("batchCounter", "I", null, label36, label22, 12);
            methodVisitor.visitLocalVariable("timeoutTask", "Lcom/mysql/cj/CancelQueryTask;", null, label37, label22, 13);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label38, label22, 14);
            methodVisitor.visitLocalVariable("updateCounts", "[J", null, label6, label22, 15);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label24, label89, 0);
            methodVisitor.visitLocalVariable("batchTimeout", "J", null, label24, label89, 1);
            methodVisitor.visitMaxs(5, 23);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "executeBatchSerially", "(J)[J", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/lang/NullPointerException");
            Label label6 = new Label();
            Label label7 = new Label();
            Label label8 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label7, label8, "com/mysql/cj/exceptions/StatementIsClosedException");
            Label label9 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label9, null);
            Label label10 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label10, label9, null);
            Label label11 = new Label();
            Label label12 = new Label();
            Label label13 = new Label();
            methodVisitor.visitTryCatchBlock(label11, label12, label13, null);
            Label label14 = new Label();
            methodVisitor.visitTryCatchBlock(label13, label14, label13, null);
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(751, label15);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(752, label11);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            Label label16 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label16);
            Label label17 = new Label();
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(753, label17);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(756, label16);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(758, label18);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            Label label19 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label19);
            Label label20 = new Label();
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(759, label20);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(760, label21);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(762, label22);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 6);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"[J", Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label24 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label24);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(763, label25);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitLdcInsn(new Long(-3L));
            methodVisitor.visitInsn(LASTORE);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(762, label26);
            methodVisitor.visitIincInsn(6, 1);
            methodVisitor.visitJumpInsn(GOTO, label23);
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(766, label24);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 6);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(768, label27);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(771, label3);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "startQueryTimer", "(Lcom/mysql/cj/Query;J)Lcom/mysql/cj/CancelQueryTask;", false);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(773, label28);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "retrieveGeneratedKeys", "Z");
            Label label29 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label29);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(774, label30);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "(I)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "batchedGeneratedKeys", "Ljava/util/ArrayList;");
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(777, label29);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/sql/SQLException", "com/mysql/cj/CancelQueryTask"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getBatchCommandIndex", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(779, label31);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label33 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label33);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(781, label34);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "setBatchCommandIndex", "(I)V", true);
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(783, label35);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            methodVisitor.visitVarInsn(ASTORE, 9);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(786, label0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(INSTANCEOF, "java/lang/String");
            Label label36 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label36);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(787, label37);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "retrieveGeneratedKeys", "Z");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "executeUpdateInternal", "(Ljava/lang/String;ZZ)J", false);
            methodVisitor.visitInsn(LASTORE);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(790, label38);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "getFirstCharOfQuery", "()C", true);
            methodVisitor.visitIntInsn(BIPUSH, 73);
            Label label39 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPNE, label39);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "containsOnDuplicateKeyInString", "(Ljava/lang/String;)Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label39);
            methodVisitor.visitInsn(ICONST_1);
            Label label40 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label40);
            methodVisitor.visitLabel(label39);
            methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "[J", Opcodes.INTEGER, "java/sql/SQLException", "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement"});
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label40);
            methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "[J", Opcodes.INTEGER, "java/sql/SQLException", "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, "java/lang/Object"}, 2, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getBatchedGeneratedKeys", "(I)V", false);
            methodVisitor.visitJumpInsn(GOTO, label1);
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(792, label36);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/QueryBindings");
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label41 = new Label();
            methodVisitor.visitLabel(label41);
            methodVisitor.visitLineNumber(793, label41);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "executeUpdateInternal", "(Lcom/mysql/cj/QueryBindings;Z)J", false);
            methodVisitor.visitInsn(LASTORE);
            Label label42 = new Label();
            methodVisitor.visitLabel(label42);
            methodVisitor.visitLineNumber(796, label42);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "containsOnDuplicateKeyUpdate", "()Z", false);
            Label label43 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label43);
            methodVisitor.visitInsn(ICONST_1);
            Label label44 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label44);
            methodVisitor.visitLabel(label43);
            methodVisitor.visitFrame(Opcodes.F_FULL, 10, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "[J", Opcodes.INTEGER, "java/sql/SQLException", "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, "java/lang/Object", "com/mysql/cj/QueryBindings"}, 1, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement"});
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label44);
            methodVisitor.visitFrame(Opcodes.F_FULL, 10, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "[J", Opcodes.INTEGER, "java/sql/SQLException", "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, "java/lang/Object", "com/mysql/cj/QueryBindings"}, 2, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getBatchedGeneratedKeys", "(I)V", false);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(810, label1);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            Label label45 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label45);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(798, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label46 = new Label();
            methodVisitor.visitLabel(label46);
            methodVisitor.visitLineNumber(799, label46);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitLdcInsn(new Long(-3L));
            methodVisitor.visitInsn(LASTORE);
            Label label47 = new Label();
            methodVisitor.visitLabel(label47);
            methodVisitor.visitLineNumber(801, label47);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "continueBatchOnError", "Z");
            Label label48 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label48);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitTypeInsn(INSTANCEOF, "com/mysql/cj/jdbc/exceptions/MySQLTimeoutException");
            methodVisitor.visitJumpInsn(IFNE, label48);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitTypeInsn(INSTANCEOF, "com/mysql/cj/jdbc/exceptions/MySQLStatementCancelledException");
            methodVisitor.visitJumpInsn(IFNE, label48);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 10);
            Label label49 = new Label();
            methodVisitor.visitLabel(label49);
            methodVisitor.visitLineNumber(802, label49);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "hasDeadlockOrTimeoutRolledBackTx", "(Ljava/sql/SQLException;)Z", false);
            methodVisitor.visitJumpInsn(IFNE, label48);
            Label label50 = new Label();
            methodVisitor.visitLabel(label50);
            methodVisitor.visitLineNumber(803, label50);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitJumpInsn(GOTO, label45);
            methodVisitor.visitLabel(label48);
            methodVisitor.visitLineNumber(805, label48);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/sql/SQLException"}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 11);
            Label label51 = new Label();
            methodVisitor.visitLabel(label51);
            methodVisitor.visitLineNumber(806, label51);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "arraycopy", "(Ljava/lang/Object;ILjava/lang/Object;II)V", false);
            Label label52 = new Label();
            methodVisitor.visitLabel(label52);
            methodVisitor.visitLineNumber(808, label52);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createBatchUpdateException", "(Ljava/sql/SQLException;[JLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label45);
            methodVisitor.visitLineNumber(779, label45);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitIincInsn(8, 1);
            methodVisitor.visitJumpInsn(GOTO, label32);
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(813, label33);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitJumpInsn(IFNULL, label4);
            Label label53 = new Label();
            methodVisitor.visitLabel(label53);
            methodVisitor.visitLineNumber(814, label53);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createBatchUpdateException", "(Ljava/sql/SQLException;[JLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(833, label4);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitInsn(ICONST_M1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "setBatchCommandIndex", "(I)V", true);
            Label label54 = new Label();
            methodVisitor.visitLabel(label54);
            methodVisitor.visitLineNumber(835, label54);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label55 = new Label();
            methodVisitor.visitLabel(label55);
            methodVisitor.visitLineNumber(836, label55);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "resetCancelledState", "()V", false);
            Label label56 = new Label();
            methodVisitor.visitLabel(label56);
            methodVisitor.visitLineNumber(837, label56);
            methodVisitor.visitJumpInsn(GOTO, label19);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(816, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/NullPointerException"});
            methodVisitor.visitVarInsn(ASTORE, 8);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(818, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(829, label7);
            Label label57 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label57);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(819, label8);
            methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "[J", Opcodes.INTEGER, "java/sql/SQLException", "com/mysql/cj/CancelQueryTask", "java/lang/NullPointerException"}, 1, new Object[]{"com/mysql/cj/exceptions/StatementIsClosedException"});
            methodVisitor.visitVarInsn(ASTORE, 9);
            Label label58 = new Label();
            methodVisitor.visitLabel(label58);
            methodVisitor.visitLineNumber(820, label58);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getBatchCommandIndex", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label59 = new Label();
            methodVisitor.visitLabel(label59);
            methodVisitor.visitLineNumber(821, label59);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitLdcInsn(new Long(-3L));
            methodVisitor.visitInsn(LASTORE);
            Label label60 = new Label();
            methodVisitor.visitLabel(label60);
            methodVisitor.visitLineNumber(823, label60);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 11);
            Label label61 = new Label();
            methodVisitor.visitLabel(label61);
            methodVisitor.visitLineNumber(825, label61);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "arraycopy", "(Ljava/lang/Object;ILjava/lang/Object;II)V", false);
            Label label62 = new Label();
            methodVisitor.visitLabel(label62);
            methodVisitor.visitLineNumber(827, label62);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLExceptionsMapping", "translateException", "(Ljava/lang/Throwable;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createBatchUpdateException", "(Ljava/sql/SQLException;[JLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label57);
            methodVisitor.visitLineNumber(831, label57);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(833, label9);
            methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "[J", Opcodes.INTEGER, "java/sql/SQLException", "com/mysql/cj/CancelQueryTask"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 12);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitInsn(ICONST_M1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "setBatchCommandIndex", "(I)V", true);
            Label label63 = new Label();
            methodVisitor.visitLabel(label63);
            methodVisitor.visitLineNumber(835, label63);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label64 = new Label();
            methodVisitor.visitLabel(label64);
            methodVisitor.visitLineNumber(836, label64);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "resetCancelledState", "()V", false);
            Label label65 = new Label();
            methodVisitor.visitLabel(label65);
            methodVisitor.visitLineNumber(837, label65);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(840, label19);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            Label label66 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label66);
            methodVisitor.visitVarInsn(ALOAD, 4);
            Label label67 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label67);
            methodVisitor.visitLabel(label66);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitLabel(label67);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"[J"});
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(841, label13);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 13);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ATHROW);
            Label label68 = new Label();
            methodVisitor.visitLabel(label68);
            methodVisitor.visitLocalVariable("i", "I", null, label23, label24, 6);
            methodVisitor.visitLocalVariable("queryBindings", "Lcom/mysql/cj/QueryBindings;", null, label41, label1, 10);
            methodVisitor.visitLocalVariable("newUpdateCounts", "[J", null, label51, label45, 11);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label46, label45, 10);
            methodVisitor.visitLocalVariable("arg", "Ljava/lang/Object;", null, label0, label45, 9);
            methodVisitor.visitLocalVariable("batchCommandIndex", "I", null, label31, label4, 8);
            methodVisitor.visitLocalVariable("batchCommandIndex", "I", null, label59, label57, 10);
            methodVisitor.visitLocalVariable("newUpdateCounts", "[J", null, label61, label57, 11);
            methodVisitor.visitLocalVariable("connectionClosedEx", "Lcom/mysql/cj/exceptions/StatementIsClosedException;", null, label58, label57, 9);
            methodVisitor.visitLocalVariable("npe", "Ljava/lang/NullPointerException;", null, label6, label9, 8);
            methodVisitor.visitLocalVariable("nbrCommands", "I", null, label21, label19, 5);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label27, label19, 6);
            methodVisitor.visitLocalVariable("timeoutTask", "Lcom/mysql/cj/CancelQueryTask;", null, label3, label19, 7);
            methodVisitor.visitLocalVariable("updateCounts", "[J", null, label18, label13, 4);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label15, label68, 0);
            methodVisitor.visitLocalVariable("batchTimeout", "J", null, label15, label68, 1);
            methodVisitor.visitMaxs(6, 14);
            methodVisitor.visitEnd();
        }
    }
}
