package com.andy.trace.mysql.transformer.asm.dump.preparedstatement;

import org.objectweb.asm.AnnotationVisitor;
import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

import static org.objectweb.asm.Opcodes.AALOAD;
import static org.objectweb.asm.Opcodes.AASTORE;
import static org.objectweb.asm.Opcodes.ACC_DEPRECATED;
import static org.objectweb.asm.Opcodes.ACC_FINAL;
import static org.objectweb.asm.Opcodes.ACC_PRIVATE;
import static org.objectweb.asm.Opcodes.ACC_PROTECTED;
import static org.objectweb.asm.Opcodes.ACC_PUBLIC;
import static org.objectweb.asm.Opcodes.ACC_STATIC;
import static org.objectweb.asm.Opcodes.ACC_SYNTHETIC;
import static org.objectweb.asm.Opcodes.ACC_VOLATILE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ANEWARRAY;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.ARRAYLENGTH;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BASTORE;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.CHECKCAST;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.DUP_X1;
import static org.objectweb.asm.Opcodes.GETFIELD;
import static org.objectweb.asm.Opcodes.GETSTATIC;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.I2B;
import static org.objectweb.asm.Opcodes.I2L;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_5;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IDIV;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFGE;
import static org.objectweb.asm.Opcodes.IFGT;
import static org.objectweb.asm.Opcodes.IFLE;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IFNONNULL;
import static org.objectweb.asm.Opcodes.IFNULL;
import static org.objectweb.asm.Opcodes.IF_ACMPEQ;
import static org.objectweb.asm.Opcodes.IF_ACMPNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.IF_ICMPGT;
import static org.objectweb.asm.Opcodes.IF_ICMPLE;
import static org.objectweb.asm.Opcodes.IF_ICMPNE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.IMUL;
import static org.objectweb.asm.Opcodes.INSTANCEOF;
import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.IREM;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.ISUB;
import static org.objectweb.asm.Opcodes.L2I;
import static org.objectweb.asm.Opcodes.LADD;
import static org.objectweb.asm.Opcodes.LAND;
import static org.objectweb.asm.Opcodes.LASTORE;
import static org.objectweb.asm.Opcodes.LCMP;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LCONST_1;
import static org.objectweb.asm.Opcodes.LDIV;
import static org.objectweb.asm.Opcodes.LLOAD;
import static org.objectweb.asm.Opcodes.LRETURN;
import static org.objectweb.asm.Opcodes.LSTORE;
import static org.objectweb.asm.Opcodes.LSUB;
import static org.objectweb.asm.Opcodes.LUSHR;
import static org.objectweb.asm.Opcodes.MONITORENTER;
import static org.objectweb.asm.Opcodes.MONITOREXIT;
import static org.objectweb.asm.Opcodes.NEWARRAY;
import static org.objectweb.asm.Opcodes.POP;
import static org.objectweb.asm.Opcodes.PUTFIELD;
import static org.objectweb.asm.Opcodes.RETURN;
import static org.objectweb.asm.Opcodes.SIPUSH;
import static org.objectweb.asm.Opcodes.T_BYTE;
import static org.objectweb.asm.Opcodes.T_LONG;
import static org.objectweb.asm.TypeReference.NEW;
public class ClientPreparedStatementDumpPart8 {
    public static void dump(ClassWriter classWriter) {
        MethodVisitor methodVisitor;
        AnnotationVisitor annotationVisitor0;
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setNClob", "(ILjava/sql/NClob;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1585, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1586, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setNClob", "(ILjava/sql/NClob;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1587, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/sql/NClob", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1588, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("value", "Ljava/sql/NClob;", null, label4, label7, 2);
            methodVisitor.visitMaxs(3, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setNString", "(ILjava/lang/String;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1606, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1607, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setNString", "(ILjava/lang/String;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1608, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/String", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1609, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/lang/String;", null, label4, label7, 2);
            methodVisitor.visitMaxs(3, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setNull", "(II)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1613, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1614, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setNull", "(I)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1615, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1616, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("sqlType", "I", null, label4, label7, 2);
            methodVisitor.visitMaxs(3, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setNull", "(IILjava/lang/String;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1620, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1621, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setNull", "(I)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1622, label5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/String", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1623, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("sqlType", "I", null, label4, label7, 2);
            methodVisitor.visitLocalVariable("typeName", "Ljava/lang/String;", null, label4, label7, 3);
            methodVisitor.visitMaxs(3, 6);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setNull", "(ILcom/mysql/cj/MysqlType;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1627, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/MysqlType", "getJdbcType", "()I", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setNull", "(II)V", false);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1628, label1);
            methodVisitor.visitInsn(RETURN);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label2, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label0, label2, 1);
            methodVisitor.visitLocalVariable("mysqlType", "Lcom/mysql/cj/MysqlType;", null, label0, label2, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setObject", "(ILjava/lang/Object;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1632, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1633, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setObject", "(ILjava/lang/Object;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1634, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1635, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("parameterObj", "Ljava/lang/Object;", null, label4, label7, 2);
            methodVisitor.visitMaxs(3, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setObject", "(ILjava/lang/Object;I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "com/mysql/cj/exceptions/FeatureNotAvailableException");
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label3, label4, null);
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label4, label5, label4, null);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1639, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1641, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ILOAD, 3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1642, label7);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/MysqlType", "getByJdbcType", "(I)Lcom/mysql/cj/MysqlType;", false);
            methodVisitor.visitInsn(ICONST_M1);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1641, label8);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setObject", "(ILjava/lang/Object;Lcom/mysql/cj/MysqlType;I)V", true);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1646, label1);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1643, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"com/mysql/cj/exceptions/FeatureNotAvailableException"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1644, label10);
            methodVisitor.visitLdcInsn("Statement.UnsupportedSQLType");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/sql/JDBCType", "valueOf", "(I)Ljava/sql/JDBCType;", false);
            methodVisitor.visitInvokeDynamicInsn("makeConcatWithConstants", "(Ljava/lang/String;Ljava/sql/JDBCType;)Ljava/lang/String;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/StringConcatFactory", "makeConcatWithConstants", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;", false), new Object[]{"\u0001\u0001"});
            methodVisitor.visitLdcInsn("S1C00");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLFeatureNotSupportedException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1647, label9);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            Label label11 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label11);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1648, label11);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLocalVariable("nae", "Lcom/mysql/cj/exceptions/FeatureNotAvailableException;", null, label10, label9, 5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label6, label12, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label6, label12, 1);
            methodVisitor.visitLocalVariable("parameterObj", "Ljava/lang/Object;", null, label6, label12, 2);
            methodVisitor.visitLocalVariable("targetSqlType", "I", null, label6, label12, 3);
            methodVisitor.visitMaxs(5, 7);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setObject", "(ILjava/lang/Object;Ljava/sql/SQLType;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1652, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1653, label0);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitTypeInsn(INSTANCEOF, "com/mysql/cj/MysqlType");
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1654, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/MysqlType");
            methodVisitor.visitInsn(ICONST_M1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setObject", "(ILjava/lang/Object;Lcom/mysql/cj/MysqlType;I)V", true);
            Label label7 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label7);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1656, label5);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/SQLType", "getVendorTypeNumber", "()Ljava/lang/Integer;", true);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setObject", "(ILjava/lang/Object;I)V", false);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1658, label7);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1659, label8);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label9, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label9, 1);
            methodVisitor.visitLocalVariable("parameterObj", "Ljava/lang/Object;", null, label4, label9, 2);
            methodVisitor.visitLocalVariable("targetSqlType", "Ljava/sql/SQLType;", null, label4, label9, 3);
            methodVisitor.visitMaxs(5, 6);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setObject", "(ILjava/lang/Object;II)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "com/mysql/cj/exceptions/FeatureNotAvailableException");
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label3, label4, null);
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label4, label5, label4, null);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1663, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1665, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ILOAD, 3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1666, label7);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/MysqlType", "getByJdbcType", "(I)Lcom/mysql/cj/MysqlType;", false);
            methodVisitor.visitVarInsn(ILOAD, 4);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1665, label8);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setObject", "(ILjava/lang/Object;Lcom/mysql/cj/MysqlType;I)V", true);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1670, label1);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1667, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"com/mysql/cj/exceptions/FeatureNotAvailableException"});
            methodVisitor.visitVarInsn(ASTORE, 6);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1668, label10);
            methodVisitor.visitLdcInsn("Statement.UnsupportedSQLType");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/sql/JDBCType", "valueOf", "(I)Ljava/sql/JDBCType;", false);
            methodVisitor.visitInvokeDynamicInsn("makeConcatWithConstants", "(Ljava/lang/String;Ljava/sql/JDBCType;)Ljava/lang/String;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/StringConcatFactory", "makeConcatWithConstants", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;", false), new Object[]{"\u0001\u0001"});
            methodVisitor.visitLdcInsn("S1C00");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLFeatureNotSupportedException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1671, label9);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            Label label11 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label11);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 7);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1672, label11);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLocalVariable("nae", "Lcom/mysql/cj/exceptions/FeatureNotAvailableException;", null, label10, label9, 6);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label6, label12, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label6, label12, 1);
            methodVisitor.visitLocalVariable("parameterObj", "Ljava/lang/Object;", null, label6, label12, 2);
            methodVisitor.visitLocalVariable("targetSqlType", "I", null, label6, label12, 3);
            methodVisitor.visitLocalVariable("scale", "I", null, label6, label12, 4);
            methodVisitor.visitMaxs(5, 8);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setObject", "(ILjava/lang/Object;Ljava/sql/SQLType;I)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1676, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1677, label0);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitTypeInsn(INSTANCEOF, "com/mysql/cj/MysqlType");
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1678, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/MysqlType");
            methodVisitor.visitVarInsn(ILOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setObject", "(ILjava/lang/Object;Lcom/mysql/cj/MysqlType;I)V", true);
            Label label7 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label7);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1680, label5);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/SQLType", "getVendorTypeNumber", "()Ljava/lang/Integer;", true);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            methodVisitor.visitVarInsn(ILOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setObject", "(ILjava/lang/Object;II)V", false);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1682, label7);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label8);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1683, label8);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label9, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label9, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/lang/Object;", null, label4, label9, 2);
            methodVisitor.visitLocalVariable("targetSqlType", "Ljava/sql/SQLType;", null, label4, label9, 3);
            methodVisitor.visitLocalVariable("scaleOrLength", "I", null, label4, label9, 4);
            methodVisitor.visitMaxs(5, 7);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setRef", "(ILjava/sql/Ref;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1687, label0);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLFeatureNotSupportedException", "()Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("i", "I", null, label0, label1, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/sql/Ref;", null, label0, label1, 2);
            methodVisitor.visitMaxs(1, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setRowId", "(ILjava/sql/RowId;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1692, label0);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLFeatureNotSupportedException", "()Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label0, label1, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/sql/RowId;", null, label0, label1, 2);
            methodVisitor.visitMaxs(1, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setShort", "(IS)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1697, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1698, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setShort", "(IS)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1699, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1700, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("x", "S", null, label4, label7, 2);
            methodVisitor.visitMaxs(3, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setSQLXML", "(ILjava/sql/SQLXML;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1704, label0);
            methodVisitor.visitVarInsn(ALOAD, 2);
            Label label1 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label1);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1705, label2);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "VARCHAR", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setNull", "(ILcom/mysql/cj/MysqlType;)V", false);
            Label label3 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1708, label1);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/MysqlSQLXML");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/MysqlSQLXML", "serializeAsCharacterStream", "()Ljava/io/Reader;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setCharacterStream", "(ILjava/io/Reader;)V", false);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1710, label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label4, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label0, label4, 1);
            methodVisitor.visitLocalVariable("xmlObject", "Ljava/sql/SQLXML;", null, label0, label4, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setString", "(ILjava/lang/String;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1714, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1715, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setString", "(ILjava/lang/String;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1716, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/String", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1717, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/lang/String;", null, label4, label7, 2);
            methodVisitor.visitMaxs(3, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setTime", "(ILjava/sql/Time;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1721, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1722, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setTime", "(ILjava/sql/Time;Ljava/util/Calendar;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1723, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/sql/Time", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1724, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/sql/Time;", null, label4, label7, 2);
            methodVisitor.visitMaxs(4, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setTime", "(ILjava/sql/Time;Ljava/util/Calendar;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1728, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1729, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setTime", "(ILjava/sql/Time;Ljava/util/Calendar;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1730, label5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/sql/Time", "java/util/Calendar", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1731, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/sql/Time;", null, label4, label7, 2);
            methodVisitor.visitLocalVariable("cal", "Ljava/util/Calendar;", null, label4, label7, 3);
            methodVisitor.visitMaxs(4, 6);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setTimestamp", "(ILjava/sql/Timestamp;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1735, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1736, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "TIMESTAMP", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setTimestamp", "(ILjava/sql/Timestamp;Ljava/util/Calendar;Lcom/mysql/cj/result/Field;Lcom/mysql/cj/MysqlType;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1737, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/sql/Timestamp", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1738, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/sql/Timestamp;", null, label4, label7, 2);
            methodVisitor.visitMaxs(6, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setTimestamp", "(ILjava/sql/Timestamp;Ljava/util/Calendar;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1742, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1743, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "TIMESTAMP", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "setTimestamp", "(ILjava/sql/Timestamp;Ljava/util/Calendar;Lcom/mysql/cj/result/Field;Lcom/mysql/cj/MysqlType;)V", true);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1744, label5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/sql/Timestamp", "java/util/Calendar", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1745, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/sql/Timestamp;", null, label4, label7, 2);
            methodVisitor.visitLocalVariable("cal", "Ljava/util/Calendar;", null, label4, label7, 3);
            methodVisitor.visitMaxs(6, 6);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC | ACC_DEPRECATED, "setUnicodeStream", "(ILjava/io/InputStream;I)V", null, new String[]{"java/sql/SQLException"});
            {
                annotationVisitor0 = methodVisitor.visitAnnotation("Ljava/lang/Deprecated;", true);
                annotationVisitor0.visitEnd();
            }
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1750, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setBinaryStream", "(ILjava/io/InputStream;I)V", false);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1751, label1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "getBindValues", "()[Lcom/mysql/cj/BindValue;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitInsn(AALOAD);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "TEXT", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/BindValue", "setMysqlType", "(Lcom/mysql/cj/MysqlType;)V", true);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1752, label2);
            methodVisitor.visitInsn(RETURN);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label3, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label0, label3, 1);
            methodVisitor.visitLocalVariable("x", "Ljava/io/InputStream;", null, label0, label3, 2);
            methodVisitor.visitLocalVariable("length", "I", null, label0, label3, 3);
            methodVisitor.visitMaxs(4, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "setURL", "(ILjava/net/URL;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1756, label0);
            methodVisitor.visitVarInsn(ALOAD, 2);
            Label label1 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label1);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1757, label2);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "VARCHAR", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setNull", "(ILcom/mysql/cj/MysqlType;)V", false);
            Label label3 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label3);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1759, label1);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/net/URL", "toString", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setString", "(ILjava/lang/String;)V", false);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1760, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "getBindValues", "()[Lcom/mysql/cj/BindValue;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitInsn(AALOAD);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "VARCHAR", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/BindValue", "setMysqlType", "(Lcom/mysql/cj/MysqlType;)V", true);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1762, label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label5, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label0, label5, 1);
            methodVisitor.visitLocalVariable("arg", "Ljava/net/URL;", null, label0, label5, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE | ACC_STATIC | ACC_SYNTHETIC, "lambda$prepareBatchedInsertSQL$0", "(Lcom/mysql/cj/jdbc/ClientPreparedStatement;Lcom/mysql/cj/BindValue;)V", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1110, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/BindValue", "getName", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/BindValue", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcStatement", "setAttribute", "(Ljava/lang/String;Ljava/lang/Object;)V", true);
            methodVisitor.visitInsn(RETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("pstmt", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("a", "Lcom/mysql/cj/BindValue;", null, label0, label1, 1);
            methodVisitor.visitMaxs(3, 2);
            methodVisitor.visitEnd();
        }
    }
}
