package com.andy.trace.mysql.transformer.asm.dump.statement;

import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

import static org.objectweb.asm.Opcodes.AASTORE;
import static org.objectweb.asm.Opcodes.ACC_FINAL;
import static org.objectweb.asm.Opcodes.ACC_PRIVATE;
import static org.objectweb.asm.Opcodes.ACC_PROTECTED;
import static org.objectweb.asm.Opcodes.ACC_PUBLIC;
import static org.objectweb.asm.Opcodes.ACC_STATIC;
import static org.objectweb.asm.Opcodes.ACC_VOLATILE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ANEWARRAY;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.ARRAYLENGTH;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BASTORE;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.CHECKCAST;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.DUP_X1;
import static org.objectweb.asm.Opcodes.GETFIELD;
import static org.objectweb.asm.Opcodes.GETSTATIC;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.I2B;
import static org.objectweb.asm.Opcodes.I2L;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_5;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFGE;
import static org.objectweb.asm.Opcodes.IFLE;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IFNONNULL;
import static org.objectweb.asm.Opcodes.IFNULL;
import static org.objectweb.asm.Opcodes.IF_ACMPEQ;
import static org.objectweb.asm.Opcodes.IF_ACMPNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.IF_ICMPLE;
import static org.objectweb.asm.Opcodes.IF_ICMPNE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.IMUL;
import static org.objectweb.asm.Opcodes.INSTANCEOF;
import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.ISUB;
import static org.objectweb.asm.Opcodes.L2I;
import static org.objectweb.asm.Opcodes.LADD;
import static org.objectweb.asm.Opcodes.LAND;
import static org.objectweb.asm.Opcodes.LASTORE;
import static org.objectweb.asm.Opcodes.LCMP;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LCONST_1;
import static org.objectweb.asm.Opcodes.LLOAD;
import static org.objectweb.asm.Opcodes.LRETURN;
import static org.objectweb.asm.Opcodes.LSTORE;
import static org.objectweb.asm.Opcodes.LUSHR;
import static org.objectweb.asm.Opcodes.MONITORENTER;
import static org.objectweb.asm.Opcodes.MONITOREXIT;
import static org.objectweb.asm.Opcodes.NEWARRAY;
import static org.objectweb.asm.Opcodes.POP;
import static org.objectweb.asm.Opcodes.PUTFIELD;
import static org.objectweb.asm.Opcodes.RETURN;
import static org.objectweb.asm.Opcodes.SIPUSH;
import static org.objectweb.asm.Opcodes.T_BYTE;
import static org.objectweb.asm.Opcodes.T_LONG;
import static org.objectweb.asm.TypeReference.NEW;
public class StatementImplDumpPart6 {
    public static void dump(ClassWriter classWriter) {
        MethodVisitor methodVisitor;
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeSimpleNonQuery", "(Lcom/mysql/cj/jdbc/JdbcConnection;Ljava/lang/String;)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1261, label4);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1262, label0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getSession", "()Lcom/mysql/cj/Session;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/NativeSession");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ICONST_M1);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getResultSetFactory", "()Lcom/mysql/cj/protocol/ProtocolEntityFactory;", false);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "execSQL", "(Lcom/mysql/cj/Query;Ljava/lang/String;ILcom/mysql/cj/protocol/a/NativePacketPayload;ZLcom/mysql/cj/protocol/ProtocolEntityFactory;Lcom/mysql/cj/protocol/ColumnDefinition;Z)Lcom/mysql/cj/protocol/Resultset;", false);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/result/ResultSetImpl");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/result/ResultSetImpl", "close", "()V", false);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1263, label5);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/jdbc/JdbcConnection", "java/lang/String", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1264, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("c", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label4, label7, 1);
            methodVisitor.visitLocalVariable("nonQuery", "Ljava/lang/String;", null, label4, label7, 2);
            methodVisitor.visitMaxs(9, 5);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;)I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1268, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeLargeUpdate", "(Ljava/lang/String;)J", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/Util", "truncateAndConvertToInt", "(J)I", false);
            methodVisitor.visitInsn(IRETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label0, label1, 1);
            methodVisitor.visitMaxs(2, 2);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "executeUpdateInternal", "(Ljava/lang/String;ZZ)J", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/lang/Exception");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "com/mysql/cj/exceptions/CJTimeoutException");
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "com/mysql/cj/exceptions/OperationCancelledException");
            Label label6 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label6, null);
            Label label7 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label7, label6, null);
            Label label8 = new Label();
            Label label9 = new Label();
            Label label10 = new Label();
            methodVisitor.visitTryCatchBlock(label8, label9, label10, null);
            Label label11 = new Label();
            methodVisitor.visitTryCatchBlock(label10, label11, label10, null);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1272, label12);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1273, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1275, label13);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkNullOrEmptyQuery", "(Ljava/lang/String;)V", false);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(1277, label14);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "resetCancelledState", "()V", false);
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(1279, label15);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "clearWarnings", "()V", false);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(1281, label16);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "isNoBackslashEscapesSet", "()Z", true);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/QueryInfo", "firstCharOfStatementUc", "(Ljava/lang/String;Z)C", false);
            methodVisitor.visitVarInsn(ISTORE, 6);
            Label label17 = new Label();
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(1282, label17);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "isNonResultSetProducingQuery", "(Ljava/lang/String;)Z", false);
            Label label18 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label18);
            Label label19 = new Label();
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(1283, label19);
            methodVisitor.visitLdcInsn("Statement.46");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("01S03");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(1286, label18);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 3, new Object[]{"java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "retrieveGeneratedKeys", "Z");
            Label label20 = new Label();
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(1288, label20);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 3);
            Label label21 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label21);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitIntInsn(BIPUSH, 73);
            methodVisitor.visitJumpInsn(IF_ICMPNE, label21);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "containsOnDuplicateKeyInString", "(Ljava/lang/String;)Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label21);
            methodVisitor.visitInsn(ICONST_1);
            Label label22 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label22);
            methodVisitor.visitLabel(label21);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"com/mysql/cj/jdbc/StatementImpl"});
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label22);
            methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER}, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER});
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "lastQueryIsOnDupKeyUpdate", "Z");
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(1290, label23);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(1292, label24);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "doEscapeProcessing", "Z");
            Label label25 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label25);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(1293, label26);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "getSessionTimeZone", "()Ljava/util/TimeZone;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(1294, label27);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "getCapabilities", "()Lcom/mysql/cj/protocol/ServerCapabilities;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerCapabilities", "serverSupportsFracSecs", "()Z", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "isServerTruncatesFracSecs", "()Z", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(1295, label28);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(1293, label29);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/EscapeProcessor", "escapeSQL", "(Ljava/lang/String;Ljava/util/TimeZone;ZZLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/lang/Object;", false);
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(1296, label30);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitTypeInsn(INSTANCEOF, "java/lang/String");
            Label label31 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label31);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            Label label32 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label32);
            methodVisitor.visitLabel(label31);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"com/mysql/cj/jdbc/result/ResultSetInternalMethods", "java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/EscapeProcessorResult");
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/EscapeProcessorResult", "escapedSql", "Ljava/lang/String;");
            methodVisitor.visitLabel(label32);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/String"});
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(1299, label25);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "isReadOnly", "(Z)Z", true);
            Label label33 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label33);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(1300, label34);
            methodVisitor.visitLdcInsn("Statement.42");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("Statement.43");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitInvokeDynamicInsn("makeConcatWithConstants", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/StringConcatFactory", "makeConcatWithConstants", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;", false), new Object[]{"\u0001\u0001"});
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(1301, label35);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            Label label36 = new Label();
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(1300, label36);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(1304, label33);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "implicitlyCloseAllOpenResults", "()V", false);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(1308, label37);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(1310, label38);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 9);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1313, label3);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getTimeoutInMillis", "()J", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "startQueryTimer", "(Lcom/mysql/cj/Query;J)Lcom/mysql/cj/CancelQueryTask;", false);
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label39 = new Label();
            methodVisitor.visitLabel(label39);
            methodVisitor.visitLineNumber(1315, label39);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getDatabase", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getCurrentDatabase", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "equals", "(Ljava/lang/Object;)Z", false);
            Label label40 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label40);
            Label label41 = new Label();
            methodVisitor.visitLabel(label41);
            methodVisitor.visitLineNumber(1316, label41);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getDatabase", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ASTORE, 9);
            Label label42 = new Label();
            methodVisitor.visitLabel(label42);
            methodVisitor.visitLineNumber(1317, label42);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getCurrentDatabase", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "setDatabase", "(Ljava/lang/String;)V", true);
            methodVisitor.visitLabel(label40);
            methodVisitor.visitLineNumber(1323, label40);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"com/mysql/cj/CancelQueryTask", "java/lang/String"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ICONST_M1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "setSessionMaxRows", "(I)V", true);
            Label label43 = new Label();
            methodVisitor.visitLabel(label43);
            methodVisitor.visitLineNumber(1325, label43);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "statementBegins", "()V", false);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1329, label0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/andy/trace/TraceManager", "beforeExecSQL", "(Ljava/lang/String;)V", false);
            Label label44 = new Label();
            methodVisitor.visitLabel(label44);
            methodVisitor.visitLineNumber(1330, label44);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getSession", "()Lcom/mysql/cj/Session;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/NativeSession");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(ICONST_M1);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getResultSetFactory", "()Lcom/mysql/cj/protocol/ProtocolEntityFactory;", false);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "execSQL", "(Lcom/mysql/cj/Query;Ljava/lang/String;ILcom/mysql/cj/protocol/a/NativePacketPayload;ZLcom/mysql/cj/protocol/ProtocolEntityFactory;Lcom/mysql/cj/protocol/ColumnDefinition;Z)Lcom/mysql/cj/protocol/Resultset;", false);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/result/ResultSetInternalMethods");
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label45 = new Label();
            methodVisitor.visitLabel(label45);
            methodVisitor.visitLineNumber(1331, label45);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/andy/trace/TraceManager", "afterExecSQLReturn", "(Ljava/lang/String;)V", false);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1335, label1);
            Label label46 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label46);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1332, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Exception"});
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label47 = new Label();
            methodVisitor.visitLabel(label47);
            methodVisitor.visitLineNumber(1333, label47);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/andy/trace/TraceManager", "afterExecSQLException", "(Ljava/lang/String;)V", false);
            Label label48 = new Label();
            methodVisitor.visitLabel(label48);
            methodVisitor.visitLineNumber(1334, label48);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label46);
            methodVisitor.visitLineNumber(1337, label46);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitJumpInsn(IFNULL, label4);
            Label label49 = new Label();
            methodVisitor.visitLabel(label49);
            methodVisitor.visitLineNumber(1338, label49);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label50 = new Label();
            methodVisitor.visitLabel(label50);
            methodVisitor.visitLineNumber(1339, label50);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 8);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1346, label4);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label51 = new Label();
            methodVisitor.visitLabel(label51);
            methodVisitor.visitLineNumber(1348, label51);
            methodVisitor.visitVarInsn(ALOAD, 9);
            Label label52 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label52);
            Label label53 = new Label();
            methodVisitor.visitLabel(label53);
            methodVisitor.visitLineNumber(1349, label53);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "setDatabase", "(Ljava/lang/String;)V", true);
            methodVisitor.visitLabel(label52);
            methodVisitor.visitLineNumber(1352, label52);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label54 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label54);
            Label label55 = new Label();
            methodVisitor.visitLabel(label55);
            methodVisitor.visitLineNumber(1353, label55);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            methodVisitor.visitJumpInsn(GOTO, label54);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1342, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"com/mysql/cj/exceptions/CJException"});
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label56 = new Label();
            methodVisitor.visitLabel(label56);
            methodVisitor.visitLineNumber(1343, label56);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLExceptionsMapping", "translateException", "(Ljava/lang/Throwable;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1346, label6);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 11);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label57 = new Label();
            methodVisitor.visitLabel(label57);
            methodVisitor.visitLineNumber(1348, label57);
            methodVisitor.visitVarInsn(ALOAD, 9);
            Label label58 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label58);
            Label label59 = new Label();
            methodVisitor.visitLabel(label59);
            methodVisitor.visitLineNumber(1349, label59);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "setDatabase", "(Ljava/lang/String;)V", true);
            methodVisitor.visitLabel(label58);
            methodVisitor.visitLineNumber(1352, label58);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.TOP, "java/lang/Throwable"}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label60 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label60);
            Label label61 = new Label();
            methodVisitor.visitLabel(label61);
            methodVisitor.visitLineNumber(1353, label61);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            methodVisitor.visitLabel(label60);
            methodVisitor.visitLineNumber(1355, label60);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label54);
            methodVisitor.visitLineNumber(1357, label54);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            Label label62 = new Label();
            methodVisitor.visitLabel(label62);
            methodVisitor.visitLineNumber(1359, label62);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 6);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "setFirstCharOfQuery", "(C)V", true);
            Label label63 = new Label();
            methodVisitor.visitLabel(label63);
            methodVisitor.visitLineNumber(1361, label63);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "getUpdateCount", "()J", true);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "updateCount", "J");
            Label label64 = new Label();
            methodVisitor.visitLabel(label64);
            methodVisitor.visitLineNumber(1363, label64);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "getUpdateID", "()J", true);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "lastInsertId", "J");
            Label label65 = new Label();
            methodVisitor.visitLabel(label65);
            methodVisitor.visitLineNumber(1365, label65);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "updateCount", "J");
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitInsn(LRETURN);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1366, label10);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 12);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitInsn(ATHROW);
            Label label66 = new Label();
            methodVisitor.visitLabel(label66);
            methodVisitor.visitLocalVariable("escapedSqlResult", "Ljava/lang/Object;", null, label30, label25, 8);
            methodVisitor.visitLocalVariable("e", "Ljava/lang/Exception;", null, label47, label46, 10);
            methodVisitor.visitLocalVariable("e", "Lcom/mysql/cj/exceptions/CJException;", null, label56, label6, 10);
            methodVisitor.visitLocalVariable("locallyScopedConn", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label13, label10, 5);
            methodVisitor.visitLocalVariable("firstStatementChar", "C", null, label17, label10, 6);
            methodVisitor.visitLocalVariable("rs", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;", null, label24, label10, 7);
            methodVisitor.visitLocalVariable("timeoutTask", "Lcom/mysql/cj/CancelQueryTask;", null, label38, label10, 8);
            methodVisitor.visitLocalVariable("oldDb", "Ljava/lang/String;", null, label3, label10, 9);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label12, label66, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label12, label66, 1);
            methodVisitor.visitLocalVariable("isBatch", "Z", null, label12, label66, 2);
            methodVisitor.visitLocalVariable("returnGeneratedKeys", "Z", null, label12, label66, 3);
            methodVisitor.visitMaxs(9, 13);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;I)I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1371, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeLargeUpdate", "(Ljava/lang/String;I)J", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/Util", "truncateAndConvertToInt", "(J)I", false);
            methodVisitor.visitInsn(IRETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label0, label1, 1);
            methodVisitor.visitLocalVariable("autoGeneratedKeys", "I", null, label0, label1, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;[I)I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1376, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeLargeUpdate", "(Ljava/lang/String;[I)J", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/Util", "truncateAndConvertToInt", "(J)I", false);
            methodVisitor.visitInsn(IRETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label0, label1, 1);
            methodVisitor.visitLocalVariable("columnIndexes", "[I", null, label0, label1, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeUpdate", "(Ljava/lang/String;[Ljava/lang/String;)I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1381, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeLargeUpdate", "(Ljava/lang/String;[Ljava/lang/String;)J", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/Util", "truncateAndConvertToInt", "(J)I", false);
            methodVisitor.visitInsn(IRETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label0, label1, 1);
            methodVisitor.visitLocalVariable("columnNames", "[Ljava/lang/String;", null, label0, label1, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getConnection", "()Ljava/sql/Connection;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1386, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1387, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1388, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ATHROW);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label5, 0);
            methodVisitor.visitMaxs(2, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getFetchDirection", "()I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1393, label0);
            methodVisitor.visitIntInsn(SIPUSH, 1000);
            methodVisitor.visitInsn(IRETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitMaxs(1, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getFetchSize", "()I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1398, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1399, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getResultFetchSize", "()I", true);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(IRETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1400, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ATHROW);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label5, 0);
            methodVisitor.visitMaxs(2, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getGeneratedKeys", "()Ljava/sql/ResultSet;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label2, null);
            Label label5 = new Label();
            Label label6 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label6, label2, null);
            Label label7 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label7, label2, null);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1405, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1406, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "retrieveGeneratedKeys", "Z");
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label9);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1407, label10);
            methodVisitor.visitLdcInsn("Statement.GeneratedKeysNotRequested");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            Label label11 = new Label();
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1408, label11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1407, label12);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1411, label9);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "batchedGeneratedKeys", "Ljava/util/ArrayList;");
            methodVisitor.visitJumpInsn(IFNONNULL, label5);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1412, label13);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "lastQueryIsOnDupKeyUpdate", "Z");
            methodVisitor.visitJumpInsn(IFEQ, label3);
            Label label14 = new Label();
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(1413, label14);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(LCONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getGeneratedKeysInternal", "(J)Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;", false);
            methodVisitor.visitInsn(DUP_X1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "generatedKeysResults", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1415, label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getGeneratedKeysInternal", "()Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;", false);
            methodVisitor.visitInsn(DUP_X1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "generatedKeysResults", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1418, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "getCharsetSettings", "()Lcom/mysql/cj/CharsetSettings;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/CharsetSettings", "getMetadataEncoding", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ASTORE, 2);
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(1419, label15);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "getCharsetSettings", "()Lcom/mysql/cj/CharsetSettings;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/CharsetSettings", "getMetadataCollationIndex", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 3);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(1420, label16);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitTypeInsn(ANEWARRAY, "com/mysql/cj/result/Field");
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label17 = new Label();
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(1421, label17);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/result/Field");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("");
            methodVisitor.visitLdcInsn("GENERATED_KEY");
            methodVisitor.visitVarInsn(ILOAD, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "BIGINT_UNSIGNED", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitIntInsn(BIPUSH, 20);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/result/Field", "<init>", "(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Lcom/mysql/cj/MysqlType;I)V", false);
            methodVisitor.visitInsn(AASTORE);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(1423, label18);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "resultSetFactory", "Lcom/mysql/cj/jdbc/result/ResultSetFactory;");
            methodVisitor.visitIntInsn(SIPUSH, 1007);
            methodVisitor.visitIntInsn(SIPUSH, 1004);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/protocol/a/result/ResultsetRowsStatic");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "batchedGeneratedKeys", "Ljava/util/ArrayList;");
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/result/DefaultColumnDefinition");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/result/DefaultColumnDefinition", "<init>", "([Lcom/mysql/cj/result/Field;)V", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/protocol/a/result/ResultsetRowsStatic", "<init>", "(Ljava/util/List;Lcom/mysql/cj/protocol/ColumnDefinition;)V", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/result/ResultSetFactory", "createFromResultsetRows", "(IILcom/mysql/cj/protocol/ResultsetRows;)Lcom/mysql/cj/jdbc/result/ResultSetImpl;", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "generatedKeysResults", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            Label label19 = new Label();
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(1426, label19);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "generatedKeysResults", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1427, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ATHROW);
            Label label20 = new Label();
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLocalVariable("encoding", "Ljava/lang/String;", null, label15, label2, 2);
            methodVisitor.visitLocalVariable("collationIndex", "I", null, label16, label2, 3);
            methodVisitor.visitLocalVariable("fields", "[Lcom/mysql/cj/result/Field;", null, label17, label2, 4);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label8, label20, 0);
            methodVisitor.visitMaxs(10, 6);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "getGeneratedKeysInternal", "()Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1436, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getLargeUpdateCount", "()J", false);
            methodVisitor.visitVarInsn(LSTORE, 1);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1437, label1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getGeneratedKeysInternal", "(J)Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;", false);
            methodVisitor.visitInsn(ARETURN);
            Label label2 = new Label();
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label2, 0);
            methodVisitor.visitLocalVariable("numKeys", "J", null, label1, label2, 1);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "getGeneratedKeysInternal", "(J)Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1441, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1442, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "getCharsetSettings", "()Lcom/mysql/cj/CharsetSettings;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/CharsetSettings", "getMetadataEncoding", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1443, label5);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "getCharsetSettings", "()Lcom/mysql/cj/CharsetSettings;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/CharsetSettings", "getMetadataCollationIndex", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1444, label6);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitTypeInsn(ANEWARRAY, "com/mysql/cj/result/Field");
            methodVisitor.visitVarInsn(ASTORE, 6);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1445, label7);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/result/Field");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("");
            methodVisitor.visitLdcInsn("GENERATED_KEY");
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/MysqlType", "BIGINT_UNSIGNED", "Lcom/mysql/cj/MysqlType;");
            methodVisitor.visitIntInsn(BIPUSH, 20);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/result/Field", "<init>", "(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Lcom/mysql/cj/MysqlType;I)V", false);
            methodVisitor.visitInsn(AASTORE);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1447, label8);
            methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "()V", false);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1449, label9);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getLastInsertID", "()J", false);
            methodVisitor.visitVarInsn(LSTORE, 8);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1451, label10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            Label label11 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label11);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1452, label12);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "getServerInfo", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1457, label13);
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitInsn(LCMP);
            Label label14 = new Label();
            methodVisitor.visitJumpInsn(IFLE, label14);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "getFirstCharOfQuery", "()C", true);
            methodVisitor.visitIntInsn(BIPUSH, 82);
            methodVisitor.visitJumpInsn(IF_ICMPNE, label14);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitJumpInsn(IFNULL, label14);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
            methodVisitor.visitJumpInsn(IFLE, label14);
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(1458, label15);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getRecordCountFromInfo", "(Ljava/lang/String;)J", false);
            methodVisitor.visitVarInsn(LSTORE, 1);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(1461, label14);
            methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.LONG, "java/lang/Object", "java/lang/String", Opcodes.INTEGER, "[Lcom/mysql/cj/result/Field;", "java/util/ArrayList", Opcodes.LONG, "java/lang/String"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitInsn(LCMP);
            methodVisitor.visitJumpInsn(IFEQ, label11);
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitInsn(LCMP);
            methodVisitor.visitJumpInsn(IFLE, label11);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(1462, label16);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label17 = new Label();
            methodVisitor.visitLabel(label17);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitInsn(I2L);
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitInsn(LCMP);
            methodVisitor.visitJumpInsn(IFGE, label11);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(1463, label18);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitTypeInsn(ANEWARRAY, "[B");
            methodVisitor.visitVarInsn(ASTORE, 12);
            Label label19 = new Label();
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(1464, label19);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitInsn(LCMP);
            Label label20 = new Label();
            methodVisitor.visitJumpInsn(IFLE, label20);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(1465, label21);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Long", "toString", "(J)Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/StringUtils", "getBytes", "(Ljava/lang/String;)[B", false);
            methodVisitor.visitInsn(AASTORE);
            Label label22 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label22);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(1467, label20);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"[[B"}, 0, null);
            methodVisitor.visitIntInsn(BIPUSH, 8);
            methodVisitor.visitIntInsn(NEWARRAY, T_BYTE);
            methodVisitor.visitVarInsn(ASTORE, 13);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(1468, label23);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitIntInsn(BIPUSH, 7);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitLdcInsn(new Long(255L));
            methodVisitor.visitInsn(LAND);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(1469, label24);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitIntInsn(BIPUSH, 6);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitIntInsn(BIPUSH, 8);
            methodVisitor.visitInsn(LUSHR);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(1470, label25);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_5);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitIntInsn(BIPUSH, 16);
            methodVisitor.visitInsn(LUSHR);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(1471, label26);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_4);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitIntInsn(BIPUSH, 24);
            methodVisitor.visitInsn(LUSHR);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(1472, label27);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_3);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitIntInsn(BIPUSH, 32);
            methodVisitor.visitInsn(LUSHR);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(1473, label28);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_2);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitIntInsn(BIPUSH, 40);
            methodVisitor.visitInsn(LUSHR);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(1474, label29);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitIntInsn(BIPUSH, 48);
            methodVisitor.visitInsn(LUSHR);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(1475, label30);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitIntInsn(BIPUSH, 56);
            methodVisitor.visitInsn(LUSHR);
            methodVisitor.visitInsn(L2I);
            methodVisitor.visitInsn(I2B);
            methodVisitor.visitInsn(BASTORE);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(1477, label31);
            methodVisitor.visitTypeInsn(NEW, "java/math/BigInteger");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/math/BigInteger", "<init>", "(I[B)V", false);
            methodVisitor.visitVarInsn(ASTORE, 14);
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(1479, label32);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/math/BigInteger", "toString", "()Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "getBytes", "()[B", false);
            methodVisitor.visitInsn(AASTORE);
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(1481, label22);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/protocol/a/result/ByteArrayRow");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/protocol/a/result/ByteArrayRow", "<init>", "([[BLcom/mysql/cj/exceptions/ExceptionInterceptor;)V", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/ArrayList", "add", "(Ljava/lang/Object;)Z", false);
            methodVisitor.visitInsn(POP);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(1482, label33);
            methodVisitor.visitVarInsn(LLOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getAutoIncrementIncrement", "()I", true);
            methodVisitor.visitInsn(I2L);
            methodVisitor.visitInsn(LADD);
            methodVisitor.visitVarInsn(LSTORE, 8);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(1462, label34);
            methodVisitor.visitIincInsn(11, 1);
            methodVisitor.visitJumpInsn(GOTO, label17);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1487, label11);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "resultSetFactory", "Lcom/mysql/cj/jdbc/result/ResultSetFactory;");
            methodVisitor.visitIntInsn(SIPUSH, 1007);
            methodVisitor.visitIntInsn(SIPUSH, 1004);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/protocol/a/result/ResultsetRowsStatic");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/result/DefaultColumnDefinition");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/result/DefaultColumnDefinition", "<init>", "([Lcom/mysql/cj/result/Field;)V", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/protocol/a/result/ResultsetRowsStatic", "<init>", "(Ljava/util/List;Lcom/mysql/cj/protocol/ColumnDefinition;)V", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/result/ResultSetFactory", "createFromResultsetRows", "(IILcom/mysql/cj/protocol/ResultsetRows;)Lcom/mysql/cj/jdbc/result/ResultSetImpl;", false);
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(1490, label35);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1491, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.LONG, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 15);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitInsn(ATHROW);
            Label label36 = new Label();
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLocalVariable("asBytes", "[B", null, label23, label22, 13);
            methodVisitor.visitLocalVariable("val", "Ljava/math/BigInteger;", null, label32, label22, 14);
            methodVisitor.visitLocalVariable("row", "[[B", null, label19, label34, 12);
            methodVisitor.visitLocalVariable("i", "I", null, label17, label11, 11);
            methodVisitor.visitLocalVariable("serverInfo", "Ljava/lang/String;", null, label13, label11, 10);
            methodVisitor.visitLocalVariable("encoding", "Ljava/lang/String;", null, label5, label2, 4);
            methodVisitor.visitLocalVariable("collationIndex", "I", null, label6, label2, 5);
            methodVisitor.visitLocalVariable("fields", "[Lcom/mysql/cj/result/Field;", null, label7, label2, 6);
            methodVisitor.visitLocalVariable("rowSet", "Ljava/util/ArrayList;", "Ljava/util/ArrayList<Lcom/mysql/cj/result/Row;>;", label9, label2, 7);
            methodVisitor.visitLocalVariable("beginAt", "J", null, label10, label2, 8);
            methodVisitor.visitLocalVariable("gkRs", "Lcom/mysql/cj/jdbc/result/ResultSetImpl;", null, label35, label2, 10);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label4, label36, 0);
            methodVisitor.visitLocalVariable("numKeys", "J", null, label4, label36, 1);
            methodVisitor.visitMaxs(10, 16);
            methodVisitor.visitEnd();
        }
    }
}
