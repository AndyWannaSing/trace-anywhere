package com.andy.trace.mysql.transformer.asm.dump.preparedstatement;

import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

import static org.objectweb.asm.Opcodes.AASTORE;
import static org.objectweb.asm.Opcodes.ACC_FINAL;
import static org.objectweb.asm.Opcodes.ACC_PRIVATE;
import static org.objectweb.asm.Opcodes.ACC_PROTECTED;
import static org.objectweb.asm.Opcodes.ACC_PUBLIC;
import static org.objectweb.asm.Opcodes.ACC_STATIC;
import static org.objectweb.asm.Opcodes.ACC_SYNTHETIC;
import static org.objectweb.asm.Opcodes.ACC_VOLATILE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ANEWARRAY;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.ARRAYLENGTH;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BASTORE;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.CHECKCAST;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.DUP_X1;
import static org.objectweb.asm.Opcodes.GETFIELD;
import static org.objectweb.asm.Opcodes.GETSTATIC;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.I2B;
import static org.objectweb.asm.Opcodes.I2L;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_5;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IDIV;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFGE;
import static org.objectweb.asm.Opcodes.IFGT;
import static org.objectweb.asm.Opcodes.IFLE;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IFNONNULL;
import static org.objectweb.asm.Opcodes.IFNULL;
import static org.objectweb.asm.Opcodes.IF_ACMPEQ;
import static org.objectweb.asm.Opcodes.IF_ACMPNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.IF_ICMPLE;
import static org.objectweb.asm.Opcodes.IF_ICMPNE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.IMUL;
import static org.objectweb.asm.Opcodes.INSTANCEOF;
import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.IREM;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.ISUB;
import static org.objectweb.asm.Opcodes.L2I;
import static org.objectweb.asm.Opcodes.LADD;
import static org.objectweb.asm.Opcodes.LAND;
import static org.objectweb.asm.Opcodes.LASTORE;
import static org.objectweb.asm.Opcodes.LCMP;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LCONST_1;
import static org.objectweb.asm.Opcodes.LDIV;
import static org.objectweb.asm.Opcodes.LLOAD;
import static org.objectweb.asm.Opcodes.LRETURN;
import static org.objectweb.asm.Opcodes.LSTORE;
import static org.objectweb.asm.Opcodes.LSUB;
import static org.objectweb.asm.Opcodes.LUSHR;
import static org.objectweb.asm.Opcodes.MONITORENTER;
import static org.objectweb.asm.Opcodes.MONITOREXIT;
import static org.objectweb.asm.Opcodes.NEWARRAY;
import static org.objectweb.asm.Opcodes.POP;
import static org.objectweb.asm.Opcodes.PUTFIELD;
import static org.objectweb.asm.Opcodes.RETURN;
import static org.objectweb.asm.Opcodes.SIPUSH;
import static org.objectweb.asm.Opcodes.T_BYTE;
import static org.objectweb.asm.Opcodes.T_LONG;
import static org.objectweb.asm.TypeReference.NEW;
public class ClientPreparedStatementDumpPart2 {
    public static void dump(ClassWriter classWriter) {
        MethodVisitor methodVisitor;
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "executeBatchInternal", "()[J", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label2, null);
            Label label5 = new Label();
            Label label6 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label6, label2, null);
            Label label7 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label7, label2, null);
            Label label8 = new Label();
            Label label9 = new Label();
            Label label10 = new Label();
            methodVisitor.visitTryCatchBlock(label8, label9, label10, null);
            Label label11 = new Label();
            Label label12 = new Label();
            methodVisitor.visitTryCatchBlock(label11, label12, label10, null);
            Label label13 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label13, label10, null);
            Label label14 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label14, label10, null);
            Label label15 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label15, label10, null);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(383, label16);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(385, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "isReadOnly", "()Z", true);
            Label label17 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label17);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(386, label18);
            methodVisitor.visitTypeInsn(NEW, "java/sql/SQLException");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitLdcInsn("PreparedStatement.25");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("PreparedStatement.26");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitInvokeDynamicInsn("makeConcatWithConstants", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/StringConcatFactory", "makeConcatWithConstants", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;", false), new Object[]{"\u0001\u0001"});
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/sql/SQLException", "<init>", "(Ljava/lang/String;Ljava/lang/String;)V", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(390, label17);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            Label label19 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label19);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitJumpInsn(IFNE, label11);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(391, label19);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(395, label11);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getTimeoutInMillis", "()J", false);
            methodVisitor.visitVarInsn(LSTORE, 2);
            Label label20 = new Label();
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(396, label20);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setTimeoutInMillis", "(J)V", false);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(398, label21);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "resetCancelledState", "()V", false);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(401, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "statementBegins", "()V", false);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(403, label22);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearWarnings", "()V", false);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(405, label23);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "batchHasPlainStatements", "Z");
            methodVisitor.visitJumpInsn(IFNE, label5);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "rewriteBatchedStatements", "Lcom/mysql/cj/conf/RuntimeProperty;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label5);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(407, label24);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/QueryInfo", "isRewritableWithMultiValuesClause", "()Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label3);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(408, label25);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "executeBatchWithMultiValuesClause", "(J)[J", false);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(419, label1);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(421, label26);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearBatch", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(408, label12);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(411, label3);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.LONG}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "batchHasPlainStatements", "Z");
            methodVisitor.visitJumpInsn(IFNE, label5);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitJumpInsn(IFNULL, label5);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(412, label27);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitInsn(ICONST_3);
            methodVisitor.visitJumpInsn(IF_ICMPLE, label5);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(413, label28);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "executePreparedBatchAsMultiStatement", "(J)[J", false);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(419, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(421, label29);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearBatch", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(413, label13);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(417, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "executeBatchSerially", "(J)[J", false);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(419, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(421, label30);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearBatch", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(417, label14);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(419, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(421, label31);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearBatch", "()V", false);
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(422, label32);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(423, label10);
            methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label15);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ATHROW);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLocalVariable("batchTimeout", "J", null, label20, label10, 2);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label16, label33, 0);
            methodVisitor.visitMaxs(4, 7);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "executePreparedBatchAsMultiStatement", "(J)[J", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/sql/SQLException");
            Label label6 = new Label();
            Label label7 = new Label();
            Label label8 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label7, label8, null);
            Label label9 = new Label();
            methodVisitor.visitTryCatchBlock(label8, label9, label8, null);
            Label label10 = new Label();
            Label label11 = new Label();
            Label label12 = new Label();
            methodVisitor.visitTryCatchBlock(label10, label11, label12, "java/sql/SQLException");
            Label label13 = new Label();
            Label label14 = new Label();
            Label label15 = new Label();
            methodVisitor.visitTryCatchBlock(label13, label14, label15, null);
            Label label16 = new Label();
            methodVisitor.visitTryCatchBlock(label15, label16, label15, null);
            Label label17 = new Label();
            Label label18 = new Label();
            Label label19 = new Label();
            methodVisitor.visitTryCatchBlock(label17, label18, label19, null);
            Label label20 = new Label();
            methodVisitor.visitTryCatchBlock(label15, label20, label19, null);
            Label label21 = new Label();
            Label label22 = new Label();
            Label label23 = new Label();
            methodVisitor.visitTryCatchBlock(label21, label22, label23, null);
            Label label24 = new Label();
            methodVisitor.visitTryCatchBlock(label15, label24, label23, null);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(437, label25);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(439, label21);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "batchedValuesClause", "Ljava/lang/String;");
            Label label26 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label26);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(440, label27);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getOriginalSql", "()Ljava/lang/String;", true);
            methodVisitor.visitInvokeDynamicInsn("makeConcatWithConstants", "(Ljava/lang/String;)Ljava/lang/String;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/StringConcatFactory", "makeConcatWithConstants", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;", false), new Object[]{"\u0001;"});
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "batchedValuesClause", "Ljava/lang/String;");
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(443, label26);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(445, label28);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getPropertySet", "()Lcom/mysql/cj/jdbc/JdbcPropertySet;", true);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/conf/PropertyKey", "allowMultiQueries", "Lcom/mysql/cj/conf/PropertyKey;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPropertySet", "getBooleanProperty", "(Lcom/mysql/cj/conf/PropertyKey;)Lcom/mysql/cj/conf/RuntimeProperty;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(446, label29);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(449, label17);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearWarnings", "()V", false);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(451, label30);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 7);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(453, label31);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "retrieveGeneratedKeys", "Z");
            Label label32 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label32);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(454, label33);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "(I)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "batchedGeneratedKeys", "Ljava/util/ArrayList;");
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(457, label32);
            methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "computeBatchSize", "(I)I", true);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(459, label34);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 8);
            Label label35 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label35);
            Label label36 = new Label();
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(460, label36);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ISTORE, 8);
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(463, label35);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 9);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(465, label37);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(466, label38);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label39 = new Label();
            methodVisitor.visitLabel(label39);
            methodVisitor.visitLineNumber(467, label39);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 12);
            Label label40 = new Label();
            methodVisitor.visitLabel(label40);
            methodVisitor.visitLineNumber(468, label40);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label41 = new Label();
            methodVisitor.visitLabel(label41);
            methodVisitor.visitLineNumber(469, label41);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/QueryInfo", "getNumberOfQueries", "()I", false);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 14);
            Label label42 = new Label();
            methodVisitor.visitLabel(label42);
            methodVisitor.visitLineNumber(470, label42);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 15);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(473, label6);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label43 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label43);
            Label label44 = new Label();
            methodVisitor.visitLabel(label44);
            methodVisitor.visitLineNumber(474, label44);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getSession", "()Lcom/mysql/cj/Session;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/NativeSession");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "enableMultiQueries", "()V", false);
            methodVisitor.visitLabel(label43);
            methodVisitor.visitLineNumber(477, label43);
            methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/PreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "[J", "java/sql/SQLException"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "retrieveGeneratedKeys", "Z");
            Label label45 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label45);
            Label label46 = new Label();
            methodVisitor.visitLabel(label46);
            methodVisitor.visitLineNumber(479, label46);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 8);
            Label label47 = new Label();
            methodVisitor.visitLabel(label47);
            methodVisitor.visitLineNumber(478, label47);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "generateMultiStatementForBatch", "(I)Ljava/lang/String;", false);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "prepareStatement", "(Ljava/lang/String;I)Ljava/sql/PreparedStatement;", true);
            methodVisitor.visitLdcInsn(Type.getType("Ljava/sql/PreparedStatement;"));
            Label label48 = new Label();
            methodVisitor.visitLabel(label48);
            methodVisitor.visitLineNumber(479, label48);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/Wrapper", "unwrap", "(Ljava/lang/Class;)Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/sql/PreparedStatement");
            Label label49 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label49);
            methodVisitor.visitLabel(label45);
            methodVisitor.visitLineNumber(481, label45);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 8);
            Label label50 = new Label();
            methodVisitor.visitLabel(label50);
            methodVisitor.visitLineNumber(480, label50);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "generateMultiStatementForBatch", "(I)Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;", true);
            methodVisitor.visitLdcInsn(Type.getType("Ljava/sql/PreparedStatement;"));
            Label label51 = new Label();
            methodVisitor.visitLabel(label51);
            methodVisitor.visitLineNumber(481, label51);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/Wrapper", "unwrap", "(Ljava/lang/Class;)Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/sql/PreparedStatement");
            methodVisitor.visitLabel(label49);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/PreparedStatement"});
            methodVisitor.visitVarInsn(ASTORE, 9);
            Label label52 = new Label();
            methodVisitor.visitLabel(label52);
            methodVisitor.visitLineNumber(483, label52);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/StatementImpl");
            methodVisitor.visitVarInsn(LLOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "startQueryTimer", "(Lcom/mysql/cj/Query;J)Lcom/mysql/cj/CancelQueryTask;", false);
            methodVisitor.visitVarInsn(ASTORE, 6);
            Label label53 = new Label();
            methodVisitor.visitLabel(label53);
            methodVisitor.visitLineNumber(485, label53);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 8);
            Label label54 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label54);
            methodVisitor.visitVarInsn(ILOAD, 7);
            Label label55 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label55);
            methodVisitor.visitLabel(label54);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(IDIV);
            methodVisitor.visitLabel(label55);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label56 = new Label();
            methodVisitor.visitLabel(label56);
            methodVisitor.visitLineNumber(487, label56);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitVarInsn(ISTORE, 16);
            Label label57 = new Label();
            methodVisitor.visitLabel(label57);
            methodVisitor.visitLineNumber(489, label57);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 17);
            Label label58 = new Label();
            methodVisitor.visitLabel(label58);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 17);
            methodVisitor.visitVarInsn(ILOAD, 16);
            methodVisitor.visitJumpInsn(IF_ICMPGE, label3);
            Label label59 = new Label();
            methodVisitor.visitLabel(label59);
            methodVisitor.visitLineNumber(490, label59);
            methodVisitor.visitVarInsn(ILOAD, 17);
            Label label60 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label60);
            methodVisitor.visitVarInsn(ILOAD, 17);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(IREM);
            methodVisitor.visitJumpInsn(IFNE, label60);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(492, label0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "execute", "()Z", true);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(495, label1);
            Label label61 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label61);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(493, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 18);
            Label label62 = new Label();
            methodVisitor.visitLabel(label62);
            methodVisitor.visitLineNumber(494, label62);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitVarInsn(ALOAD, 18);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 15);
            methodVisitor.visitLabel(label61);
            methodVisitor.visitLineNumber(497, label61);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/StatementImpl");
            methodVisitor.visitVarInsn(ILOAD, 13);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "processMultiCountsAndKeys", "(Lcom/mysql/cj/jdbc/StatementImpl;I[J)I", false);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label63 = new Label();
            methodVisitor.visitLabel(label63);
            methodVisitor.visitLineNumber(499, label63);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "clearParameters", "()V", true);
            Label label64 = new Label();
            methodVisitor.visitLabel(label64);
            methodVisitor.visitLineNumber(500, label64);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 10);
            methodVisitor.visitLabel(label60);
            methodVisitor.visitLineNumber(503, label60);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitIincInsn(12, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setOneBatchedParameterSet", "(Ljava/sql/PreparedStatement;ILjava/lang/Object;)I", false);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label65 = new Label();
            methodVisitor.visitLabel(label65);
            methodVisitor.visitLineNumber(489, label65);
            methodVisitor.visitIincInsn(17, 1);
            methodVisitor.visitJumpInsn(GOTO, label58);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(507, label3);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "execute", "()Z", true);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(510, label4);
            Label label66 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label66);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(508, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 17);
            Label label67 = new Label();
            methodVisitor.visitLabel(label67);
            methodVisitor.visitLineNumber(509, label67);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitVarInsn(ALOAD, 17);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 15);
            methodVisitor.visitLabel(label66);
            methodVisitor.visitLineNumber(512, label66);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/StatementImpl");
            methodVisitor.visitVarInsn(ILOAD, 13);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "processMultiCountsAndKeys", "(Lcom/mysql/cj/jdbc/StatementImpl;I[J)I", false);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label68 = new Label();
            methodVisitor.visitLabel(label68);
            methodVisitor.visitLineNumber(514, label68);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "clearParameters", "()V", true);
            Label label69 = new Label();
            methodVisitor.visitLabel(label69);
            methodVisitor.visitLineNumber(516, label69);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label70 = new Label();
            methodVisitor.visitLabel(label70);
            methodVisitor.visitLineNumber(518, label70);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitJumpInsn(IFNULL, label7);
            Label label71 = new Label();
            methodVisitor.visitLabel(label71);
            methodVisitor.visitLineNumber(520, label71);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/JdbcPreparedStatement");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "checkCancelTimeout", "()V", true);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(524, label7);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitJumpInsn(IFNULL, label13);
            Label label72 = new Label();
            methodVisitor.visitLabel(label72);
            methodVisitor.visitLineNumber(525, label72);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "close", "()V", true);
            Label label73 = new Label();
            methodVisitor.visitLabel(label73);
            methodVisitor.visitLineNumber(526, label73);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 9);
            methodVisitor.visitJumpInsn(GOTO, label13);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(524, label8);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 19);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitVarInsn(ALOAD, 9);
            Label label74 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label74);
            Label label75 = new Label();
            methodVisitor.visitLabel(label75);
            methodVisitor.visitLineNumber(525, label75);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "close", "()V", true);
            Label label76 = new Label();
            methodVisitor.visitLabel(label76);
            methodVisitor.visitLineNumber(526, label76);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 9);
            methodVisitor.visitLabel(label74);
            methodVisitor.visitLineNumber(528, label74);
            methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/PreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "[J", "java/sql/SQLException", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 19);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(531, label13);
            methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/PreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "[J", "java/sql/SQLException"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 8);
            Label label77 = new Label();
            methodVisitor.visitJumpInsn(IFLE, label77);
            Label label78 = new Label();
            methodVisitor.visitLabel(label78);
            methodVisitor.visitLineNumber(533, label78);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "retrieveGeneratedKeys", "Z");
            Label label79 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label79);
            Label label80 = new Label();
            methodVisitor.visitLabel(label80);
            methodVisitor.visitLineNumber(534, label80);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "generateMultiStatementForBatch", "(I)Ljava/lang/String;", false);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "prepareStatement", "(Ljava/lang/String;I)Ljava/sql/PreparedStatement;", true);
            Label label81 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label81);
            methodVisitor.visitLabel(label79);
            methodVisitor.visitLineNumber(535, label79);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "generateMultiStatementForBatch", "(I)Ljava/lang/String;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "prepareStatement", "(Ljava/lang/String;)Ljava/sql/PreparedStatement;", true);
            methodVisitor.visitLabel(label81);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/PreparedStatement"});
            methodVisitor.visitVarInsn(ASTORE, 9);
            Label label82 = new Label();
            methodVisitor.visitLabel(label82);
            methodVisitor.visitLineNumber(537, label82);
            methodVisitor.visitVarInsn(ALOAD, 6);
            Label label83 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label83);
            Label label84 = new Label();
            methodVisitor.visitLabel(label84);
            methodVisitor.visitLineNumber(538, label84);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/Query");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/CancelQueryTask", "setQueryToCancel", "(Lcom/mysql/cj/Query;)V", true);
            methodVisitor.visitLabel(label83);
            methodVisitor.visitLineNumber(541, label83);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label85 = new Label();
            methodVisitor.visitLabel(label85);
            methodVisitor.visitLineNumber(543, label85);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitVarInsn(ILOAD, 7);
            methodVisitor.visitJumpInsn(IF_ICMPGE, label10);
            Label label86 = new Label();
            methodVisitor.visitLabel(label86);
            methodVisitor.visitLineNumber(544, label86);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitIincInsn(12, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "setOneBatchedParameterSet", "(Ljava/sql/PreparedStatement;ILjava/lang/Object;)I", false);
            methodVisitor.visitVarInsn(ISTORE, 10);
            methodVisitor.visitJumpInsn(GOTO, label85);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(548, label10);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "execute", "()Z", true);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(551, label11);
            Label label87 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label87);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(549, label12);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 16);
            Label label88 = new Label();
            methodVisitor.visitLabel(label88);
            methodVisitor.visitLineNumber(550, label88);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 12);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitVarInsn(ALOAD, 16);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 15);
            methodVisitor.visitLabel(label87);
            methodVisitor.visitLineNumber(553, label87);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/StatementImpl");
            methodVisitor.visitVarInsn(ILOAD, 13);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "processMultiCountsAndKeys", "(Lcom/mysql/cj/jdbc/StatementImpl;I[J)I", false);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label89 = new Label();
            methodVisitor.visitLabel(label89);
            methodVisitor.visitLineNumber(555, label89);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "clearParameters", "()V", true);
            methodVisitor.visitLabel(label77);
            methodVisitor.visitLineNumber(558, label77);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 6);
            Label label90 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label90);
            Label label91 = new Label();
            methodVisitor.visitLabel(label91);
            methodVisitor.visitLineNumber(559, label91);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label92 = new Label();
            methodVisitor.visitLabel(label92);
            methodVisitor.visitLineNumber(560, label92);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitLabel(label90);
            methodVisitor.visitLineNumber(563, label90);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 15);
            Label label93 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label93);
            Label label94 = new Label();
            methodVisitor.visitLabel(label94);
            methodVisitor.visitLineNumber(564, label94);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createBatchUpdateException", "(Ljava/sql/SQLException;[JLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label93);
            methodVisitor.visitLineNumber(567, label93);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitVarInsn(ASTORE, 16);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(569, label14);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitJumpInsn(IFNULL, label18);
            Label label95 = new Label();
            methodVisitor.visitLabel(label95);
            methodVisitor.visitLineNumber(570, label95);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "close", "()V", true);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(574, label18);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"[J"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label96 = new Label();
            methodVisitor.visitLabel(label96);
            methodVisitor.visitLineNumber(575, label96);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "resetCancelledState", "()V", false);
            Label label97 = new Label();
            methodVisitor.visitLabel(label97);
            methodVisitor.visitLineNumber(577, label97);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label98 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label98);
            Label label99 = new Label();
            methodVisitor.visitLabel(label99);
            methodVisitor.visitLineNumber(578, label99);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getSession", "()Lcom/mysql/cj/Session;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/NativeSession");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "disableMultiQueries", "()V", false);
            methodVisitor.visitLabel(label98);
            methodVisitor.visitLineNumber(581, label98);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearBatch", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(567, label22);
            methodVisitor.visitVarInsn(ALOAD, 16);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(569, label15);
            methodVisitor.visitFrame(Opcodes.F_FULL, 15, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/PreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "[J", "java/sql/SQLException"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 20);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitVarInsn(ALOAD, 9);
            Label label100 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label100);
            Label label101 = new Label();
            methodVisitor.visitLabel(label101);
            methodVisitor.visitLineNumber(570, label101);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/PreparedStatement", "close", "()V", true);
            methodVisitor.visitLabel(label100);
            methodVisitor.visitLineNumber(572, label100);
            methodVisitor.visitFrame(Opcodes.F_FULL, 20, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/PreparedStatement", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER, "[J", "java/sql/SQLException", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 20);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(574, label19);
            methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 21);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label102 = new Label();
            methodVisitor.visitLabel(label102);
            methodVisitor.visitLineNumber(575, label102);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "resetCancelledState", "()V", false);
            Label label103 = new Label();
            methodVisitor.visitLabel(label103);
            methodVisitor.visitLineNumber(577, label103);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label104 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label104);
            Label label105 = new Label();
            methodVisitor.visitLabel(label105);
            methodVisitor.visitLineNumber(578, label105);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getSession", "()Lcom/mysql/cj/Session;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/NativeSession");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "disableMultiQueries", "()V", false);
            methodVisitor.visitLabel(label104);
            methodVisitor.visitLineNumber(581, label104);
            methodVisitor.visitFrame(Opcodes.F_FULL, 21, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object", "com/mysql/cj/jdbc/JdbcConnection", Opcodes.INTEGER, "com/mysql/cj/CancelQueryTask", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearBatch", "()V", false);
            Label label106 = new Label();
            methodVisitor.visitLabel(label106);
            methodVisitor.visitLineNumber(582, label106);
            methodVisitor.visitVarInsn(ALOAD, 21);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(583, label23);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.LONG, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 22);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label24);
            methodVisitor.visitVarInsn(ALOAD, 22);
            methodVisitor.visitInsn(ATHROW);
            Label label107 = new Label();
            methodVisitor.visitLabel(label107);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label62, label61, 18);
            methodVisitor.visitLocalVariable("i", "I", null, label58, label3, 17);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label67, label66, 17);
            methodVisitor.visitLocalVariable("numberArgsToExecute", "I", null, label57, label7, 16);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label88, label87, 16);
            methodVisitor.visitLocalVariable("numBatchedArgs", "I", null, label31, label19, 7);
            methodVisitor.visitLocalVariable("numValuesPerBatch", "I", null, label34, label19, 8);
            methodVisitor.visitLocalVariable("batchedStatement", "Ljava/sql/PreparedStatement;", null, label37, label19, 9);
            methodVisitor.visitLocalVariable("batchedParamIndex", "I", null, label38, label19, 10);
            methodVisitor.visitLocalVariable("numberToExecuteAsMultiValue", "I", null, label39, label19, 11);
            methodVisitor.visitLocalVariable("batchCounter", "I", null, label40, label19, 12);
            methodVisitor.visitLocalVariable("updateCountCounter", "I", null, label41, label19, 13);
            methodVisitor.visitLocalVariable("updateCounts", "[J", null, label42, label19, 14);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label6, label19, 15);
            methodVisitor.visitLocalVariable("locallyScopedConn", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label28, label23, 4);
            methodVisitor.visitLocalVariable("multiQueriesEnabled", "Z", null, label29, label23, 5);
            methodVisitor.visitLocalVariable("timeoutTask", "Lcom/mysql/cj/CancelQueryTask;", null, label17, label23, 6);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label25, label107, 0);
            methodVisitor.visitLocalVariable("batchTimeout", "J", null, label25, label107, 1);
            methodVisitor.visitMaxs(5, 23);
            methodVisitor.visitEnd();
        }
    }
}
