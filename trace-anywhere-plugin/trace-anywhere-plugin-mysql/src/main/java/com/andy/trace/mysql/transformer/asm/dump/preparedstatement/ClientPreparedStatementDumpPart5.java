package com.andy.trace.mysql.transformer.asm.dump.preparedstatement;

import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

import static org.objectweb.asm.Opcodes.AALOAD;
import static org.objectweb.asm.Opcodes.AASTORE;
import static org.objectweb.asm.Opcodes.ACC_FINAL;
import static org.objectweb.asm.Opcodes.ACC_PRIVATE;
import static org.objectweb.asm.Opcodes.ACC_PROTECTED;
import static org.objectweb.asm.Opcodes.ACC_PUBLIC;
import static org.objectweb.asm.Opcodes.ACC_STATIC;
import static org.objectweb.asm.Opcodes.ACC_SYNTHETIC;
import static org.objectweb.asm.Opcodes.ACC_VOLATILE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ANEWARRAY;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.ARRAYLENGTH;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BASTORE;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.CHECKCAST;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.DUP_X1;
import static org.objectweb.asm.Opcodes.GETFIELD;
import static org.objectweb.asm.Opcodes.GETSTATIC;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.I2B;
import static org.objectweb.asm.Opcodes.I2L;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_5;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IDIV;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFGE;
import static org.objectweb.asm.Opcodes.IFGT;
import static org.objectweb.asm.Opcodes.IFLE;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IFNONNULL;
import static org.objectweb.asm.Opcodes.IFNULL;
import static org.objectweb.asm.Opcodes.IF_ACMPEQ;
import static org.objectweb.asm.Opcodes.IF_ACMPNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.IF_ICMPGT;
import static org.objectweb.asm.Opcodes.IF_ICMPLE;
import static org.objectweb.asm.Opcodes.IF_ICMPNE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.IMUL;
import static org.objectweb.asm.Opcodes.INSTANCEOF;
import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.IREM;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.ISUB;
import static org.objectweb.asm.Opcodes.L2I;
import static org.objectweb.asm.Opcodes.LADD;
import static org.objectweb.asm.Opcodes.LAND;
import static org.objectweb.asm.Opcodes.LASTORE;
import static org.objectweb.asm.Opcodes.LCMP;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LCONST_1;
import static org.objectweb.asm.Opcodes.LDIV;
import static org.objectweb.asm.Opcodes.LLOAD;
import static org.objectweb.asm.Opcodes.LRETURN;
import static org.objectweb.asm.Opcodes.LSTORE;
import static org.objectweb.asm.Opcodes.LSUB;
import static org.objectweb.asm.Opcodes.LUSHR;
import static org.objectweb.asm.Opcodes.MONITORENTER;
import static org.objectweb.asm.Opcodes.MONITOREXIT;
import static org.objectweb.asm.Opcodes.NEWARRAY;
import static org.objectweb.asm.Opcodes.POP;
import static org.objectweb.asm.Opcodes.PUTFIELD;
import static org.objectweb.asm.Opcodes.RETURN;
import static org.objectweb.asm.Opcodes.SIPUSH;
import static org.objectweb.asm.Opcodes.T_BYTE;
import static org.objectweb.asm.Opcodes.T_LONG;
import static org.objectweb.asm.TypeReference.NEW;
public class ClientPreparedStatementDumpPart5 {
    public static void dump(ClassWriter classWriter) {
        MethodVisitor methodVisitor;
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "setRetrieveGeneratedKeys", "(Z)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1117, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1118, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "retrieveGeneratedKeys", "Z");
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1119, label5);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label6 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label6);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1120, label6);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label7, 0);
            methodVisitor.visitLocalVariable("flag", "Z", null, label4, label7, 1);
            methodVisitor.visitMaxs(2, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getBytesRepresentation", "(I)[B", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1124, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1125, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "getBytesRepresentation", "(I)[B", true);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1126, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label5, 0);
            methodVisitor.visitLocalVariable("parameterIndex", "I", null, label4, label5, 1);
            methodVisitor.visitMaxs(3, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getMetaData", "()Ljava/sql/ResultSetMetaData;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/sql/SQLException");
            Label label6 = new Label();
            Label label7 = new Label();
            Label label8 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label7, label8, null);
            Label label9 = new Label();
            Label label10 = new Label();
            Label label11 = new Label();
            methodVisitor.visitTryCatchBlock(label9, label10, label11, "java/sql/SQLException");
            Label label12 = new Label();
            Label label13 = new Label();
            Label label14 = new Label();
            methodVisitor.visitTryCatchBlock(label12, label13, label14, "java/sql/SQLException");
            Label label15 = new Label();
            methodVisitor.visitTryCatchBlock(label8, label15, label8, null);
            Label label16 = new Label();
            Label label17 = new Label();
            Label label18 = new Label();
            methodVisitor.visitTryCatchBlock(label16, label17, label18, null);
            Label label19 = new Label();
            Label label20 = new Label();
            methodVisitor.visitTryCatchBlock(label19, label20, label18, null);
            Label label21 = new Label();
            methodVisitor.visitTryCatchBlock(label18, label21, label18, null);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(1131, label22);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(1139, label16);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "isResultSetProducingQuery", "()Z", false);
            methodVisitor.visitJumpInsn(IFNE, label19);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(1140, label23);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(1143, label19);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 2);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(1144, label24);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 3);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(1146, label25);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "pstmtResultMetaData", "Ljava/sql/ResultSetMetaData;");
            Label label26 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label26);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1148, label6);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/jdbc/ClientPreparedStatement");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getOriginalSql", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCurrentDatabase", "()Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(1149, label27);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", false);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "<init>", "(Lcom/mysql/cj/jdbc/JdbcConnection;Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/QueryInfo;)V", false);
            methodVisitor.visitVarInsn(ASTORE, 2);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(1151, label28);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "setMaxRows", "(I)V", true);
            Label label29 = new Label();
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(1153, label29);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getParameterCount", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 4);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(1155, label30);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", "java/lang/Object", "com/mysql/cj/jdbc/JdbcPreparedStatement", "java/sql/ResultSet", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitVarInsn(ILOAD, 4);
            Label label32 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGT, label32);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(1156, label33);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitVarInsn(ILOAD, 5);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "setString", "(ILjava/lang/String;)V", true);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(1155, label34);
            methodVisitor.visitIincInsn(5, 1);
            methodVisitor.visitJumpInsn(GOTO, label31);
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(1159, label32);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "execute", "()Z", true);
            methodVisitor.visitVarInsn(ISTORE, 5);
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(1161, label35);
            methodVisitor.visitVarInsn(ILOAD, 5);
            Label label36 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label36);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(1162, label37);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "getResultSet", "()Ljava/sql/ResultSet;", true);
            methodVisitor.visitVarInsn(ASTORE, 3);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(1164, label38);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "getMetaData", "()Ljava/sql/ResultSetMetaData;", true);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "pstmtResultMetaData", "Ljava/sql/ResultSetMetaData;");
            methodVisitor.visitJumpInsn(GOTO, label7);
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(1166, label36);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/jdbc/result/ResultSetMetaData");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitTypeInsn(ANEWARRAY, "com/mysql/cj/result/Field");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            Label label39 = new Label();
            methodVisitor.visitLabel(label39);
            methodVisitor.visitLineNumber(1167, label39);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getPropertySet", "()Lcom/mysql/cj/conf/PropertySet;", false);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/conf/PropertyKey", "useOldAliasMetadataBehavior", "Lcom/mysql/cj/conf/PropertyKey;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/PropertySet", "getBooleanProperty", "(Lcom/mysql/cj/conf/PropertyKey;)Lcom/mysql/cj/conf/RuntimeProperty;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            Label label40 = new Label();
            methodVisitor.visitLabel(label40);
            methodVisitor.visitLineNumber(1168, label40);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getPropertySet", "()Lcom/mysql/cj/conf/PropertySet;", false);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/conf/PropertyKey", "yearIsDateType", "Lcom/mysql/cj/conf/PropertyKey;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/PropertySet", "getBooleanProperty", "(Lcom/mysql/cj/conf/PropertyKey;)Lcom/mysql/cj/conf/RuntimeProperty;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/jdbc/result/ResultSetMetaData", "<init>", "(Lcom/mysql/cj/Session;[Lcom/mysql/cj/result/Field;ZZLcom/mysql/cj/exceptions/ExceptionInterceptor;)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "pstmtResultMetaData", "Ljava/sql/ResultSetMetaData;");
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1171, label7);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 4);
            Label label41 = new Label();
            methodVisitor.visitLabel(label41);
            methodVisitor.visitLineNumber(1173, label41);
            methodVisitor.visitVarInsn(ALOAD, 3);
            Label label42 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label42);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1175, label0);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "close", "()V", true);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1178, label1);
            Label label43 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label43);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1176, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 5, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", "java/lang/Object", "com/mysql/cj/jdbc/JdbcPreparedStatement", "java/sql/ResultSet", "java/sql/SQLException"}, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label44 = new Label();
            methodVisitor.visitLabel(label44);
            methodVisitor.visitLineNumber(1177, label44);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitLabel(label43);
            methodVisitor.visitLineNumber(1180, label43);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitLabel(label42);
            methodVisitor.visitLineNumber(1183, label42);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            Label label45 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label45);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1185, label3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "close", "()V", true);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1188, label4);
            Label label46 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label46);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1186, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label47 = new Label();
            methodVisitor.visitLabel(label47);
            methodVisitor.visitLineNumber(1187, label47);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitLabel(label46);
            methodVisitor.visitLineNumber(1190, label46);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitLabel(label45);
            methodVisitor.visitLineNumber(1193, label45);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 4);
            Label label48 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label48);
            Label label49 = new Label();
            methodVisitor.visitLabel(label49);
            methodVisitor.visitLineNumber(1194, label49);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label48);
            methodVisitor.visitLineNumber(1196, label48);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitJumpInsn(GOTO, label26);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1171, label8);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitLabel(label15);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label50 = new Label();
            methodVisitor.visitLabel(label50);
            methodVisitor.visitLineNumber(1173, label50);
            methodVisitor.visitVarInsn(ALOAD, 3);
            Label label51 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label51);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1175, label9);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/ResultSet", "close", "()V", true);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1178, label10);
            Label label52 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label52);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1176, label11);
            methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", "java/lang/Object", "com/mysql/cj/jdbc/JdbcPreparedStatement", "java/sql/ResultSet", Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable", "java/sql/SQLException"}, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label53 = new Label();
            methodVisitor.visitLabel(label53);
            methodVisitor.visitLineNumber(1177, label53);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitVarInsn(ASTORE, 7);
            methodVisitor.visitLabel(label52);
            methodVisitor.visitLineNumber(1180, label52);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitLabel(label51);
            methodVisitor.visitLineNumber(1183, label51);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 2);
            Label label54 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label54);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1185, label12);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPreparedStatement", "close", "()V", true);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1188, label13);
            Label label55 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label55);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(1186, label14);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label56 = new Label();
            methodVisitor.visitLabel(label56);
            methodVisitor.visitLineNumber(1187, label56);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitVarInsn(ASTORE, 7);
            methodVisitor.visitLabel(label55);
            methodVisitor.visitLineNumber(1190, label55);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitLabel(label54);
            methodVisitor.visitLineNumber(1193, label54);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 7);
            Label label57 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label57);
            Label label58 = new Label();
            methodVisitor.visitLabel(label58);
            methodVisitor.visitLineNumber(1194, label58);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label57);
            methodVisitor.visitLineNumber(1196, label57);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(1199, label26);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 3, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "pstmtResultMetaData", "Ljava/sql/ResultSetMetaData;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(1200, label18);
            methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 9);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label21);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitInsn(ATHROW);
            Label label59 = new Label();
            methodVisitor.visitLabel(label59);
            methodVisitor.visitLocalVariable("i", "I", null, label31, label32, 5);
            methodVisitor.visitLocalVariable("paramCount", "I", null, label30, label7, 4);
            methodVisitor.visitLocalVariable("hadResults", "Z", null, label35, label7, 5);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label44, label43, 5);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label47, label46, 5);
            methodVisitor.visitLocalVariable("sqlExRethrow", "Ljava/sql/SQLException;", null, label41, label48, 4);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label53, label52, 8);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label56, label55, 8);
            methodVisitor.visitLocalVariable("sqlExRethrow", "Ljava/sql/SQLException;", null, label50, label57, 7);
            methodVisitor.visitLocalVariable("mdStmt", "Lcom/mysql/cj/jdbc/JdbcPreparedStatement;", null, label24, label18, 2);
            methodVisitor.visitLocalVariable("mdRs", "Ljava/sql/ResultSet;", null, label25, label18, 3);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label22, label59, 0);
            methodVisitor.visitMaxs(8, 10);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "isResultSetProducingQuery", "()Z", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1210, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/QueryInfo", "getQueryReturnType", "()Lcom/mysql/cj/QueryReturnType;", false);
            methodVisitor.visitVarInsn(ASTORE, 1);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1211, label1);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/QueryReturnType", "PRODUCES_RESULT_SET", "Lcom/mysql/cj/QueryReturnType;");
            Label label2 = new Label();
            methodVisitor.visitJumpInsn(IF_ACMPEQ, label2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/QueryReturnType", "MAY_PRODUCE_RESULT_SET", "Lcom/mysql/cj/QueryReturnType;");
            Label label3 = new Label();
            methodVisitor.visitJumpInsn(IF_ACMPNE, label3);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"com/mysql/cj/QueryReturnType"}, 0, null);
            methodVisitor.visitInsn(ICONST_1);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label4);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitInsn(IRETURN);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label5, 0);
            methodVisitor.visitLocalVariable("queryReturnType", "Lcom/mysql/cj/QueryReturnType;", null, label1, label5, 1);
            methodVisitor.visitMaxs(2, 2);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "isNonResultSetProducingQuery", "()Z", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1221, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/QueryInfo", "getQueryReturnType", "()Lcom/mysql/cj/QueryReturnType;", false);
            methodVisitor.visitVarInsn(ASTORE, 1);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1222, label1);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/QueryReturnType", "DOES_NOT_PRODUCE_RESULT_SET", "Lcom/mysql/cj/QueryReturnType;");
            Label label2 = new Label();
            methodVisitor.visitJumpInsn(IF_ACMPEQ, label2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/QueryReturnType", "MAY_PRODUCE_RESULT_SET", "Lcom/mysql/cj/QueryReturnType;");
            Label label3 = new Label();
            methodVisitor.visitJumpInsn(IF_ACMPNE, label3);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"com/mysql/cj/QueryReturnType"}, 0, null);
            methodVisitor.visitInsn(ICONST_1);
            Label label4 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label4);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitInsn(IRETURN);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label5, 0);
            methodVisitor.visitLocalVariable("queryReturnType", "Lcom/mysql/cj/QueryReturnType;", null, label1, label5, 1);
            methodVisitor.visitMaxs(2, 2);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getParameterMetaData", "()Ljava/sql/ParameterMetaData;", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1227, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1228, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "parameterMetaData", "Lcom/mysql/cj/jdbc/MysqlParameterMetadata;");
            Label label5 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label5);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1229, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getPropertySet", "()Lcom/mysql/cj/conf/PropertySet;", false);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/conf/PropertyKey", "generateSimpleParameterMetadata", "Lcom/mysql/cj/conf/PropertyKey;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/PropertySet", "getBooleanProperty", "(Lcom/mysql/cj/conf/PropertyKey;)Lcom/mysql/cj/conf/RuntimeProperty;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            Label label7 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label7);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1230, label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/jdbc/MysqlParameterMetadata");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getParameterCount", "()I", true);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/jdbc/MysqlParameterMetadata", "<init>", "(I)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "parameterMetaData", "Lcom/mysql/cj/jdbc/MysqlParameterMetadata;");
            methodVisitor.visitJumpInsn(GOTO, label5);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1232, label7);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/jdbc/MysqlParameterMetadata");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getParameterCount", "()I", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "exceptionInterceptor", "Lcom/mysql/cj/exceptions/ExceptionInterceptor;");
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/jdbc/MysqlParameterMetadata", "<init>", "(Lcom/mysql/cj/Session;[Lcom/mysql/cj/result/Field;ILcom/mysql/cj/exceptions/ExceptionInterceptor;)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "parameterMetaData", "Lcom/mysql/cj/jdbc/MysqlParameterMetadata;");
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1237, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "parameterMetaData", "Lcom/mysql/cj/jdbc/MysqlParameterMetadata;");
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1238, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ATHROW);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label9, 0);
            methodVisitor.visitMaxs(7, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1243, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", true);
            methodVisitor.visitInsn(ARETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label0, label1, 0);
            methodVisitor.visitMaxs(1, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "initializeFromQueryInfo", "()V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1247, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1249, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/QueryInfo", "getStaticSqlParts", "()[[B", false);
            methodVisitor.visitInsn(ARRAYLENGTH);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ISTORE, 2);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1250, label5);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "setParameterCount", "(I)V", true);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1251, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitTypeInsn(NEW, "com/mysql/cj/NativeQueryBindings");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitInvokeDynamicInsn("apply", "()Ljava/util/function/Function;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;", false), new Object[]{Type.getType("(Ljava/lang/Object;)Ljava/lang/Object;"), new Handle(Opcodes.H_NEWINVOKESPECIAL, "com/mysql/cj/NativeQueryBindValue", "<init>", "(Lcom/mysql/cj/Session;)V", false), Type.getType("(Lcom/mysql/cj/Session;)Lcom/mysql/cj/BindValue;")});
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/NativeQueryBindings", "<init>", "(ILcom/mysql/cj/Session;Ljava/util/function/Function;)V", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "setQueryBindings", "(Lcom/mysql/cj/QueryBindings;)V", true);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1252, label7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "clearParameters", "()V", false);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1253, label8);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            Label label9 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label9);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 2, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1254, label9);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLocalVariable("parameterCount", "I", null, label5, label8, 2);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label10, 0);
            methodVisitor.visitMaxs(6, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "isNull", "(I)Z", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label3, label2, null);
            Label label4 = new Label();
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1258, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1259, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "getBindValues", "()[Lcom/mysql/cj/BindValue;", true);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getCoreParameterIndex", "(I)I", false);
            methodVisitor.visitInsn(AALOAD);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/BindValue", "isNull", "()Z", true);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(IRETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1260, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/ClientPreparedStatement", Opcodes.INTEGER, "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 3);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitInsn(ATHROW);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label4, label5, 0);
            methodVisitor.visitLocalVariable("paramIndex", "I", null, label4, label5, 1);
            methodVisitor.visitMaxs(3, 4);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "realClose", "(ZZ)V", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label2, null);
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label5, label2, null);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1265, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "connection", "Lcom/mysql/cj/jdbc/JdbcConnection;");
            methodVisitor.visitVarInsn(ASTORE, 3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1267, label7);
            methodVisitor.visitVarInsn(ALOAD, 3);
            Label label8 = new Label();
            methodVisitor.visitJumpInsn(IFNONNULL, label8);
            Label label9 = new Label();
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(1268, label9);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1271, label8);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"com/mysql/cj/jdbc/JdbcConnection"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 4);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1275, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "isClosed", "Z");
            methodVisitor.visitJumpInsn(IFEQ, label3);
            Label label10 = new Label();
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(1276, label10);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(RETURN);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1279, label3);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "useUsageAdvisor", "Z");
            Label label11 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label11);
            Label label12 = new Label();
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1280, label12);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getQueryBindings", "()Lcom/mysql/cj/QueryBindings;", true);
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label13 = new Label();
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1281, label13);
            methodVisitor.visitVarInsn(ALOAD, 5);
            Label label14 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label14);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryBindings", "getNumberOfExecutions", "()I", true);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitJumpInsn(IF_ICMPGT, label11);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(1282, label14);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"com/mysql/cj/QueryBindings"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getProfilerEventHandler", "()Lcom/mysql/cj/log/ProfilerEventHandler;", false);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitTypeInsn(NEW, "java/lang/Throwable");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Throwable", "<init>", "()V", false);
            methodVisitor.visitLdcInsn("PreparedStatement.43");
            Label label15 = new Label();
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(1283, label15);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            Label label16 = new Label();
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(1282, label16);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/log/ProfilerEventHandler", "processEvent", "(BLcom/mysql/cj/Session;Lcom/mysql/cj/Query;Lcom/mysql/cj/protocol/Resultset;JLjava/lang/Throwable;Ljava/lang/String;)V", true);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1287, label11);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 1);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "com/mysql/cj/jdbc/StatementImpl", "realClose", "(ZZ)V", false);
            Label label17 = new Label();
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(1289, label17);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "setOriginalSql", "(Ljava/lang/String;)V", true);
            Label label18 = new Label();
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(1290, label18);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "setQueryBindings", "(Lcom/mysql/cj/QueryBindings;)V", true);
            Label label19 = new Label();
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(1291, label19);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label4);
            Label label20 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label20);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitVarInsn(ALOAD, 4);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(1292, label20);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(RETURN);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLocalVariable("qb", "Lcom/mysql/cj/QueryBindings;", null, label13, label11, 5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label6, label21, 0);
            methodVisitor.visitLocalVariable("calledExplicitly", "Z", null, label6, label21, 1);
            methodVisitor.visitLocalVariable("closeOpenResults", "Z", null, label6, label21, 2);
            methodVisitor.visitLocalVariable("locallyScopedConn", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label7, label21, 3);
            methodVisitor.visitMaxs(9, 7);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "getPreparedSql", "()Ljava/lang/String;", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, null);
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label2, null);
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label2, label5, label2, null);
            Label label6 = new Label();
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1296, label6);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 1);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1297, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "rewrittenBatchSize", "I");
            methodVisitor.visitJumpInsn(IFNE, label3);
            Label label7 = new Label();
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1298, label7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/ClientPreparedStatement", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/PreparedQuery");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/PreparedQuery", "getOriginalSql", "()Ljava/lang/String;", true);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1301, label3);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/ClientPreparedStatement", "getQueryInfo", "()Lcom/mysql/cj/QueryInfo;", false);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/QueryInfo", "getSqlForBatch", "()Ljava/lang/String;", false);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1302, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ATHROW);
            Label label8 = new Label();
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/ClientPreparedStatement;", null, label6, label8, 0);
            methodVisitor.visitMaxs(2, 3);
            methodVisitor.visitEnd();
        }
    }
}
