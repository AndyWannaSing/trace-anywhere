package com.andy.trace.mysql.transformer.asm.dump.statement;

import org.objectweb.asm.ClassWriter;
import org.objectweb.asm.FieldVisitor;
import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.MethodVisitor;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;

import static org.objectweb.asm.Opcodes.ACC_FINAL;
import static org.objectweb.asm.Opcodes.ACC_PRIVATE;
import static org.objectweb.asm.Opcodes.ACC_PROTECTED;
import static org.objectweb.asm.Opcodes.ACC_PUBLIC;
import static org.objectweb.asm.Opcodes.ACC_STATIC;
import static org.objectweb.asm.Opcodes.ACC_VOLATILE;
import static org.objectweb.asm.Opcodes.ACONST_NULL;
import static org.objectweb.asm.Opcodes.ALOAD;
import static org.objectweb.asm.Opcodes.ARETURN;
import static org.objectweb.asm.Opcodes.ARRAYLENGTH;
import static org.objectweb.asm.Opcodes.ASTORE;
import static org.objectweb.asm.Opcodes.ATHROW;
import static org.objectweb.asm.Opcodes.BIPUSH;
import static org.objectweb.asm.Opcodes.CHECKCAST;
import static org.objectweb.asm.Opcodes.DUP;
import static org.objectweb.asm.Opcodes.GETFIELD;
import static org.objectweb.asm.Opcodes.GETSTATIC;
import static org.objectweb.asm.Opcodes.GOTO;
import static org.objectweb.asm.Opcodes.IADD;
import static org.objectweb.asm.Opcodes.ICONST_0;
import static org.objectweb.asm.Opcodes.ICONST_1;
import static org.objectweb.asm.Opcodes.ICONST_2;
import static org.objectweb.asm.Opcodes.ICONST_3;
import static org.objectweb.asm.Opcodes.ICONST_4;
import static org.objectweb.asm.Opcodes.ICONST_M1;
import static org.objectweb.asm.Opcodes.IFEQ;
import static org.objectweb.asm.Opcodes.IFLE;
import static org.objectweb.asm.Opcodes.IFNE;
import static org.objectweb.asm.Opcodes.IFNONNULL;
import static org.objectweb.asm.Opcodes.IFNULL;
import static org.objectweb.asm.Opcodes.IF_ACMPEQ;
import static org.objectweb.asm.Opcodes.IF_ACMPNE;
import static org.objectweb.asm.Opcodes.IF_ICMPEQ;
import static org.objectweb.asm.Opcodes.IF_ICMPGE;
import static org.objectweb.asm.Opcodes.IF_ICMPLE;
import static org.objectweb.asm.Opcodes.IF_ICMPNE;
import static org.objectweb.asm.Opcodes.ILOAD;
import static org.objectweb.asm.Opcodes.IMUL;
import static org.objectweb.asm.Opcodes.INSTANCEOF;
import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;
import static org.objectweb.asm.Opcodes.INVOKESPECIAL;
import static org.objectweb.asm.Opcodes.INVOKESTATIC;
import static org.objectweb.asm.Opcodes.INVOKEVIRTUAL;
import static org.objectweb.asm.Opcodes.IRETURN;
import static org.objectweb.asm.Opcodes.ISTORE;
import static org.objectweb.asm.Opcodes.ISUB;
import static org.objectweb.asm.Opcodes.LASTORE;
import static org.objectweb.asm.Opcodes.LCONST_0;
import static org.objectweb.asm.Opcodes.LLOAD;
import static org.objectweb.asm.Opcodes.LSTORE;
import static org.objectweb.asm.Opcodes.MONITORENTER;
import static org.objectweb.asm.Opcodes.MONITOREXIT;
import static org.objectweb.asm.Opcodes.NEWARRAY;
import static org.objectweb.asm.Opcodes.POP;
import static org.objectweb.asm.Opcodes.PUTFIELD;
import static org.objectweb.asm.Opcodes.RETURN;
import static org.objectweb.asm.Opcodes.SIPUSH;
import static org.objectweb.asm.Opcodes.T_LONG;
import static org.objectweb.asm.TypeReference.NEW;
public class StatementImplDumpPart4 {
    public static void dump(ClassWriter classWriter) {
        MethodVisitor methodVisitor;
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Ljava/lang/String;I)Z", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(795, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitInsn(ICONST_1);
            Label label1 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPNE, label1);
            methodVisitor.visitInsn(ICONST_1);
            Label label2 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label2);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", Opcodes.INTEGER}, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String"});
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", Opcodes.INTEGER}, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeInternal", "(Ljava/lang/String;Z)Z", false);
            methodVisitor.visitInsn(IRETURN);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label3, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label0, label3, 1);
            methodVisitor.visitLocalVariable("returnGeneratedKeys", "I", null, label0, label3, 2);
            methodVisitor.visitMaxs(4, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Ljava/lang/String;[I)Z", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(800, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            Label label1 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ARRAYLENGTH);
            methodVisitor.visitJumpInsn(IFLE, label1);
            methodVisitor.visitInsn(ICONST_1);
            Label label2 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label2);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", "[I"}, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String"});
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", "[I"}, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeInternal", "(Ljava/lang/String;Z)Z", false);
            methodVisitor.visitInsn(IRETURN);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label3, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label0, label3, 1);
            methodVisitor.visitLocalVariable("generatedKeyIndices", "[I", null, label0, label3, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "execute", "(Ljava/lang/String;[Ljava/lang/String;)Z", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(805, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            Label label1 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label1);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(ARRAYLENGTH);
            methodVisitor.visitJumpInsn(IFLE, label1);
            methodVisitor.visitInsn(ICONST_1);
            Label label2 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label2);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", "[Ljava/lang/String;"}, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String"});
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", "[Ljava/lang/String;"}, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "java/lang/String", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeInternal", "(Ljava/lang/String;Z)Z", false);
            methodVisitor.visitInsn(IRETURN);
            Label label3 = new Label();
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label3, 0);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label0, label3, 1);
            methodVisitor.visitLocalVariable("generatedKeyNames", "[Ljava/lang/String;", null, label0, label3, 2);
            methodVisitor.visitMaxs(3, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PUBLIC, "executeBatch", "()[I", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(810, label0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeBatchInternal", "()[J", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/Util", "truncateAndConvertToInt", "([J)[I", false);
            methodVisitor.visitInsn(ARETURN);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label1, 0);
            methodVisitor.visitMaxs(1, 1);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED, "executeBatchInternal", "()[J", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, null);
            Label label6 = new Label();
            Label label7 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label7, label5, null);
            Label label8 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label8, label5, null);
            Label label9 = new Label();
            Label label10 = new Label();
            Label label11 = new Label();
            methodVisitor.visitTryCatchBlock(label9, label10, label11, null);
            Label label12 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label12, label11, null);
            Label label13 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label13, label11, null);
            Label label14 = new Label();
            Label label15 = new Label();
            Label label16 = new Label();
            methodVisitor.visitTryCatchBlock(label14, label15, label16, null);
            Label label17 = new Label();
            Label label18 = new Label();
            methodVisitor.visitTryCatchBlock(label17, label18, label16, null);
            Label label19 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label19, label16, null);
            Label label20 = new Label();
            methodVisitor.visitTryCatchBlock(label5, label20, label16, null);
            Label label21 = new Label();
            methodVisitor.visitLabel(label21);
            methodVisitor.visitLineNumber(814, label21);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitVarInsn(ASTORE, 1);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(816, label22);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 2);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(817, label14);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "isReadOnly", "()Z", true);
            Label label23 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label23);
            Label label24 = new Label();
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(818, label24);
            methodVisitor.visitLdcInsn("Statement.34");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitLdcInsn("Statement.35");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/Messages", "getString", "(Ljava/lang/String;)Ljava/lang/String;", false);
            methodVisitor.visitInvokeDynamicInsn("makeConcatWithConstants", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/StringConcatFactory", "makeConcatWithConstants", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;", false), new Object[]{"\u0001\u0001"});
            methodVisitor.visitLdcInsn("S1009");
            methodVisitor.visitVarInsn(ALOAD, 0);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(819, label25);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(818, label26);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createSQLException", "(Ljava/lang/String;Ljava/lang/String;Lcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(822, label23);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "implicitlyCloseAllOpenResults", "()V", false);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(824, label27);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitVarInsn(ASTORE, 3);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitLineNumber(826, label28);
            methodVisitor.visitVarInsn(ALOAD, 3);
            Label label29 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label29);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitJumpInsn(IFNE, label17);
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(827, label29);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/util/List"}, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label15);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitLineNumber(831, label17);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getTimeoutInMillis", "()J", false);
            methodVisitor.visitVarInsn(LSTORE, 4);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(832, label30);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(LCONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "setTimeoutInMillis", "(J)V", false);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(834, label31);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitLineNumber(837, label9);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "resetCancelledState", "()V", false);
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(839, label32);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "statementBegins", "()V", false);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(841, label33);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "clearWarnings", "()V", false);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(844, label3);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "retrieveGeneratedKeys", "Z");
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(846, label34);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(848, label35);
            methodVisitor.visitVarInsn(ALOAD, 3);
            Label label36 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label36);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(849, label37);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitVarInsn(ISTORE, 8);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(851, label38);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitTypeInsn(NEW, "java/util/ArrayList");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "size", "()I", true);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/ArrayList", "<init>", "(I)V", false);
            methodVisitor.visitFieldInsn(PUTFIELD, "com/mysql/cj/jdbc/StatementImpl", "batchedGeneratedKeys", "Ljava/util/ArrayList;");
            Label label39 = new Label();
            methodVisitor.visitLabel(label39);
            methodVisitor.visitLineNumber(853, label39);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getPropertySet", "()Lcom/mysql/cj/jdbc/JdbcPropertySet;", true);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/conf/PropertyKey", "allowMultiQueries", "Lcom/mysql/cj/conf/PropertyKey;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPropertySet", "getBooleanProperty", "(Lcom/mysql/cj/conf/PropertyKey;)Lcom/mysql/cj/conf/RuntimeProperty;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            methodVisitor.visitVarInsn(ISTORE, 9);
            Label label40 = new Label();
            methodVisitor.visitLabel(label40);
            methodVisitor.visitLineNumber(855, label40);
            methodVisitor.visitVarInsn(ILOAD, 9);
            Label label41 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label41);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "rewriteBatchedStatements", "Lcom/mysql/cj/conf/RuntimeProperty;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Boolean");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Boolean", "booleanValue", "()Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label6);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitInsn(ICONST_4);
            methodVisitor.visitJumpInsn(IF_ICMPLE, label6);
            methodVisitor.visitLabel(label41);
            methodVisitor.visitLineNumber(856, label41);
            methodVisitor.visitFrame(Opcodes.F_FULL, 9, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/util/List", Opcodes.LONG, "com/mysql/cj/CancelQueryTask", "[J", Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 9);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitVarInsn(LLOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeBatchUsingMultiQueries", "(ZIJ)[J", false);
            methodVisitor.visitVarInsn(ASTORE, 10);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(919, label4);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(923, label10);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label42 = new Label();
            methodVisitor.visitLabel(label42);
            methodVisitor.visitLineNumber(924, label42);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "resetCancelledState", "()V", false);
            Label label43 = new Label();
            methodVisitor.visitLabel(label43);
            methodVisitor.visitLineNumber(926, label43);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "setTimeoutInMillis", "(J)V", false);
            Label label44 = new Label();
            methodVisitor.visitLabel(label44);
            methodVisitor.visitLineNumber(928, label44);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "clearBatch", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(856, label18);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(859, label6);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "startQueryTimer", "(Lcom/mysql/cj/Query;J)Lcom/mysql/cj/CancelQueryTask;", false);
            methodVisitor.visitVarInsn(ASTORE, 6);
            Label label45 = new Label();
            methodVisitor.visitLabel(label45);
            methodVisitor.visitLineNumber(861, label45);
            methodVisitor.visitVarInsn(ILOAD, 8);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label46 = new Label();
            methodVisitor.visitLabel(label46);
            methodVisitor.visitLineNumber(863, label46);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label47 = new Label();
            methodVisitor.visitLabel(label47);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitVarInsn(ILOAD, 8);
            Label label48 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label48);
            Label label49 = new Label();
            methodVisitor.visitLabel(label49);
            methodVisitor.visitLineNumber(864, label49);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitLdcInsn(new Long(-3L));
            methodVisitor.visitInsn(LASTORE);
            Label label50 = new Label();
            methodVisitor.visitLabel(label50);
            methodVisitor.visitLineNumber(863, label50);
            methodVisitor.visitIincInsn(10, 1);
            methodVisitor.visitJumpInsn(GOTO, label47);
            methodVisitor.visitLabel(label48);
            methodVisitor.visitLineNumber(867, label48);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label51 = new Label();
            methodVisitor.visitLabel(label51);
            methodVisitor.visitLineNumber(869, label51);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label52 = new Label();
            methodVisitor.visitLabel(label52);
            methodVisitor.visitLineNumber(871, label52);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 11);
            Label label53 = new Label();
            methodVisitor.visitLabel(label53);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/sql/SQLException", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitVarInsn(ILOAD, 8);
            Label label54 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label54);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(873, label0);
            methodVisitor.visitVarInsn(ALOAD, 3);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            methodVisitor.visitVarInsn(ASTORE, 12);
            Label label55 = new Label();
            methodVisitor.visitLabel(label55);
            methodVisitor.visitLineNumber(874, label55);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "executeUpdateInternal", "(Ljava/lang/String;ZZ)J", false);
            methodVisitor.visitInsn(LASTORE);
            Label label56 = new Label();
            methodVisitor.visitLabel(label56);
            methodVisitor.visitLineNumber(876, label56);
            methodVisitor.visitVarInsn(ALOAD, 6);
            Label label57 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label57);
            Label label58 = new Label();
            methodVisitor.visitLabel(label58);
            methodVisitor.visitLineNumber(878, label58);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkCancelTimeout", "()V", false);
            methodVisitor.visitLabel(label57);
            methodVisitor.visitLineNumber(882, label57);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/String"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "results", "Lcom/mysql/cj/jdbc/result/ResultSetInternalMethods;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/result/ResultSetInternalMethods", "getFirstCharOfQuery", "()C", true);
            methodVisitor.visitIntInsn(BIPUSH, 73);
            Label label59 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPNE, label59);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "containsOnDuplicateKeyInString", "(Ljava/lang/String;)Z", false);
            methodVisitor.visitJumpInsn(IFEQ, label59);
            methodVisitor.visitInsn(ICONST_1);
            Label label60 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label60);
            methodVisitor.visitLabel(label59);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"com/mysql/cj/jdbc/StatementImpl"});
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitLabel(label60);
            methodVisitor.visitFrame(Opcodes.F_FULL, 12, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/util/List", Opcodes.LONG, "com/mysql/cj/CancelQueryTask", "[J", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/SQLException", Opcodes.INTEGER, "java/lang/String"}, 2, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER});
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getBatchedGeneratedKeys", "(I)V", false);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(904, label1);
            Label label61 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label61);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(883, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 11, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/util/List", Opcodes.LONG, "com/mysql/cj/CancelQueryTask", "[J", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/SQLException", Opcodes.INTEGER}, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 12);
            Label label62 = new Label();
            methodVisitor.visitLabel(label62);
            methodVisitor.visitLineNumber(884, label62);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitLdcInsn(new Long(-3L));
            methodVisitor.visitInsn(LASTORE);
            Label label63 = new Label();
            methodVisitor.visitLabel(label63);
            methodVisitor.visitLineNumber(886, label63);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "continueBatchOnError", "Z");
            Label label64 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label64);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitTypeInsn(INSTANCEOF, "com/mysql/cj/jdbc/exceptions/MySQLTimeoutException");
            methodVisitor.visitJumpInsn(IFNE, label64);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitTypeInsn(INSTANCEOF, "com/mysql/cj/jdbc/exceptions/MySQLStatementCancelledException");
            methodVisitor.visitJumpInsn(IFNE, label64);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 12);
            Label label65 = new Label();
            methodVisitor.visitLabel(label65);
            methodVisitor.visitLineNumber(887, label65);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "hasDeadlockOrTimeoutRolledBackTx", "(Ljava/sql/SQLException;)Z", false);
            methodVisitor.visitJumpInsn(IFNE, label64);
            Label label66 = new Label();
            methodVisitor.visitLabel(label66);
            methodVisitor.visitLineNumber(888, label66);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitVarInsn(ASTORE, 10);
            methodVisitor.visitJumpInsn(GOTO, label61);
            methodVisitor.visitLabel(label64);
            methodVisitor.visitLineNumber(890, label64);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/sql/SQLException"}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 13);
            Label label67 = new Label();
            methodVisitor.visitLabel(label67);
            methodVisitor.visitLineNumber(892, label67);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "hasDeadlockOrTimeoutRolledBackTx", "(Ljava/sql/SQLException;)Z", false);
            Label label68 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label68);
            Label label69 = new Label();
            methodVisitor.visitLabel(label69);
            methodVisitor.visitLineNumber(893, label69);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 14);
            Label label70 = new Label();
            methodVisitor.visitLabel(label70);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"[J", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 14);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ARRAYLENGTH);
            Label label71 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label71);
            Label label72 = new Label();
            methodVisitor.visitLabel(label72);
            methodVisitor.visitLineNumber(894, label72);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitVarInsn(ILOAD, 14);
            methodVisitor.visitLdcInsn(new Long(-3L));
            methodVisitor.visitInsn(LASTORE);
            Label label73 = new Label();
            methodVisitor.visitLabel(label73);
            methodVisitor.visitLineNumber(893, label73);
            methodVisitor.visitIincInsn(14, 1);
            methodVisitor.visitJumpInsn(GOTO, label70);
            methodVisitor.visitLabel(label71);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            Label label74 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label74);
            methodVisitor.visitLabel(label68);
            methodVisitor.visitLineNumber(897, label68);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ALOAD, 13);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ILOAD, 11);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/System", "arraycopy", "(Ljava/lang/Object;ILjava/lang/Object;II)V", false);
            methodVisitor.visitLabel(label74);
            methodVisitor.visitLineNumber(900, label74);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitVarInsn(ASTORE, 10);
            Label label75 = new Label();
            methodVisitor.visitLabel(label75);
            methodVisitor.visitLineNumber(901, label75);
            methodVisitor.visitJumpInsn(GOTO, label54);
            methodVisitor.visitLabel(label61);
            methodVisitor.visitLineNumber(871, label61);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitIincInsn(11, 1);
            methodVisitor.visitJumpInsn(GOTO, label53);
            methodVisitor.visitLabel(label54);
            methodVisitor.visitLineNumber(907, label54);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitJumpInsn(IFNULL, label36);
            Label label76 = new Label();
            methodVisitor.visitLabel(label76);
            methodVisitor.visitLineNumber(908, label76);
            methodVisitor.visitVarInsn(ALOAD, 10);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createBatchUpdateException", "(Ljava/sql/SQLException;[JLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(912, label36);
            methodVisitor.visitFrame(Opcodes.F_FULL, 7, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/util/List", Opcodes.LONG, "com/mysql/cj/CancelQueryTask", "[J"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 6);
            Label label77 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label77);
            Label label78 = new Label();
            methodVisitor.visitLabel(label78);
            methodVisitor.visitLineNumber(913, label78);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label79 = new Label();
            methodVisitor.visitLabel(label79);
            methodVisitor.visitLineNumber(914, label79);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitLabel(label77);
            methodVisitor.visitLineNumber(917, label77);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 7);
            Label label80 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label80);
            methodVisitor.visitVarInsn(ALOAD, 7);
            Label label81 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label81);
            methodVisitor.visitLabel(label80);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitLabel(label81);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"[J"});
            methodVisitor.visitVarInsn(ASTORE, 8);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(919, label7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(923, label12);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label82 = new Label();
            methodVisitor.visitLabel(label82);
            methodVisitor.visitLineNumber(924, label82);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "resetCancelledState", "()V", false);
            Label label83 = new Label();
            methodVisitor.visitLabel(label83);
            methodVisitor.visitLineNumber(926, label83);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "setTimeoutInMillis", "(J)V", false);
            Label label84 = new Label();
            methodVisitor.visitLabel(label84);
            methodVisitor.visitLineNumber(928, label84);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "clearBatch", "()V", false);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(917, label19);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(919, label5);
            methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/util/List", Opcodes.LONG, "com/mysql/cj/CancelQueryTask"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 15);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getStatementExecuting", "()Ljava/util/concurrent/atomic/AtomicBoolean;", true);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/concurrent/atomic/AtomicBoolean", "set", "(Z)V", false);
            Label label85 = new Label();
            methodVisitor.visitLabel(label85);
            methodVisitor.visitLineNumber(920, label85);
            methodVisitor.visitVarInsn(ALOAD, 15);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(923, label11);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 16);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label86 = new Label();
            methodVisitor.visitLabel(label86);
            methodVisitor.visitLineNumber(924, label86);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "resetCancelledState", "()V", false);
            Label label87 = new Label();
            methodVisitor.visitLabel(label87);
            methodVisitor.visitLineNumber(926, label87);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(LLOAD, 4);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "setTimeoutInMillis", "(J)V", false);
            Label label88 = new Label();
            methodVisitor.visitLabel(label88);
            methodVisitor.visitLineNumber(928, label88);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "clearBatch", "()V", false);
            Label label89 = new Label();
            methodVisitor.visitLabel(label89);
            methodVisitor.visitLineNumber(929, label89);
            methodVisitor.visitVarInsn(ALOAD, 16);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitLineNumber(930, label16);
            methodVisitor.visitFrame(Opcodes.F_FULL, 3, new Object[]{"com/mysql/cj/jdbc/StatementImpl", "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 17);
            methodVisitor.visitVarInsn(ALOAD, 2);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitVarInsn(ALOAD, 17);
            methodVisitor.visitInsn(ATHROW);
            Label label90 = new Label();
            methodVisitor.visitLabel(label90);
            methodVisitor.visitLocalVariable("i", "I", null, label47, label48, 10);
            methodVisitor.visitLocalVariable("sql", "Ljava/lang/String;", null, label55, label1, 12);
            methodVisitor.visitLocalVariable("i", "I", null, label70, label71, 14);
            methodVisitor.visitLocalVariable("newUpdateCounts", "[J", null, label67, label61, 13);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label62, label61, 12);
            methodVisitor.visitLocalVariable("nbrCommands", "I", null, label38, label36, 8);
            methodVisitor.visitLocalVariable("multiQueriesEnabled", "Z", null, label40, label36, 9);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label51, label36, 10);
            methodVisitor.visitLocalVariable("commandIndex", "I", null, label52, label36, 11);
            methodVisitor.visitLocalVariable("updateCounts", "[J", null, label35, label5, 7);
            methodVisitor.visitLocalVariable("batchedArgs", "Ljava/util/List;", "Ljava/util/List<Ljava/lang/Object;>;", label28, label16, 3);
            methodVisitor.visitLocalVariable("individualStatementTimeout", "J", null, label30, label16, 4);
            methodVisitor.visitLocalVariable("timeoutTask", "Lcom/mysql/cj/CancelQueryTask;", null, label9, label16, 6);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label21, label90, 0);
            methodVisitor.visitLocalVariable("locallyScopedConn", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label22, label90, 1);
            methodVisitor.visitMaxs(6, 18);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PROTECTED | ACC_FINAL, "hasDeadlockOrTimeoutRolledBackTx", "(Ljava/sql/SQLException;)Z", null, null);
            methodVisitor.visitCode();
            Label label0 = new Label();
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(934, label0);
            methodVisitor.visitVarInsn(ALOAD, 1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/sql/SQLException", "getErrorCode", "()I", false);
            methodVisitor.visitVarInsn(ISTORE, 2);
            Label label1 = new Label();
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(936, label1);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label2 = new Label();
            Label label3 = new Label();
            Label label4 = new Label();
            methodVisitor.visitLookupSwitchInsn(label4, new int[]{1205, 1206, 1213}, new Label[]{label2, label3, label3});
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(939, label3);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(IRETURN);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(941, label2);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(IRETURN);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(943, label4);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(IRETURN);
            Label label5 = new Label();
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label0, label5, 0);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label0, label5, 1);
            methodVisitor.visitLocalVariable("vendorCode", "I", null, label1, label5, 2);
            methodVisitor.visitMaxs(1, 3);
            methodVisitor.visitEnd();
        }
        {
            methodVisitor = classWriter.visitMethod(ACC_PRIVATE, "executeBatchUsingMultiQueries", "(ZIJ)[J", null, new String[]{"java/sql/SQLException"});
            methodVisitor.visitCode();
            Label label0 = new Label();
            Label label1 = new Label();
            Label label2 = new Label();
            methodVisitor.visitTryCatchBlock(label0, label1, label2, "java/sql/SQLException");
            Label label3 = new Label();
            Label label4 = new Label();
            Label label5 = new Label();
            methodVisitor.visitTryCatchBlock(label3, label4, label5, "java/sql/SQLException");
            Label label6 = new Label();
            Label label7 = new Label();
            Label label8 = new Label();
            methodVisitor.visitTryCatchBlock(label6, label7, label8, null);
            Label label9 = new Label();
            methodVisitor.visitTryCatchBlock(label8, label9, label8, null);
            Label label10 = new Label();
            Label label11 = new Label();
            Label label12 = new Label();
            methodVisitor.visitTryCatchBlock(label10, label11, label12, null);
            Label label13 = new Label();
            Label label14 = new Label();
            Label label15 = new Label();
            methodVisitor.visitTryCatchBlock(label13, label14, label15, null);
            Label label16 = new Label();
            methodVisitor.visitTryCatchBlock(label15, label16, label15, null);
            Label label17 = new Label();
            methodVisitor.visitTryCatchBlock(label12, label17, label12, null);
            Label label18 = new Label();
            Label label19 = new Label();
            Label label20 = new Label();
            methodVisitor.visitTryCatchBlock(label18, label19, label20, null);
            Label label21 = new Label();
            methodVisitor.visitTryCatchBlock(label12, label21, label20, null);
            Label label22 = new Label();
            methodVisitor.visitLabel(label22);
            methodVisitor.visitLineNumber(964, label22);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "checkClosed", "()Lcom/mysql/cj/jdbc/JdbcConnection;", false);
            methodVisitor.visitVarInsn(ASTORE, 5);
            Label label23 = new Label();
            methodVisitor.visitLabel(label23);
            methodVisitor.visitLineNumber(966, label23);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getConnectionMutex", "()Ljava/lang/Object;", true);
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitVarInsn(ASTORE, 6);
            methodVisitor.visitInsn(MONITORENTER);
            methodVisitor.visitLabel(label18);
            methodVisitor.visitLineNumber(967, label18);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label24 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label24);
            Label label25 = new Label();
            methodVisitor.visitLabel(label25);
            methodVisitor.visitLineNumber(968, label25);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "enableMultiQueries", "()V", false);
            methodVisitor.visitLabel(label24);
            methodVisitor.visitLineNumber(971, label24);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object"}, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label26 = new Label();
            methodVisitor.visitLabel(label26);
            methodVisitor.visitLineNumber(973, label26);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 8);
            methodVisitor.visitLabel(label10);
            methodVisitor.visitLineNumber(976, label10);
            methodVisitor.visitVarInsn(ILOAD, 2);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitVarInsn(ASTORE, 9);
            Label label27 = new Label();
            methodVisitor.visitLabel(label27);
            methodVisitor.visitLineNumber(978, label27);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label28 = new Label();
            methodVisitor.visitLabel(label28);
            methodVisitor.visitFrame(Opcodes.F_FULL, 10, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/sql/Statement", "com/mysql/cj/CancelQueryTask", "[J", Opcodes.INTEGER}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label29 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label29);
            Label label30 = new Label();
            methodVisitor.visitLabel(label30);
            methodVisitor.visitLineNumber(979, label30);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitLdcInsn(new Long(-3L));
            methodVisitor.visitInsn(LASTORE);
            Label label31 = new Label();
            methodVisitor.visitLabel(label31);
            methodVisitor.visitLineNumber(978, label31);
            methodVisitor.visitIincInsn(10, 1);
            methodVisitor.visitJumpInsn(GOTO, label28);
            methodVisitor.visitLabel(label29);
            methodVisitor.visitLineNumber(982, label29);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label32 = new Label();
            methodVisitor.visitLabel(label32);
            methodVisitor.visitLineNumber(984, label32);
            methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            methodVisitor.visitVarInsn(ASTORE, 11);
            Label label33 = new Label();
            methodVisitor.visitLabel(label33);
            methodVisitor.visitLineNumber(986, label33);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "createStatement", "()Ljava/sql/Statement;", true);
            methodVisitor.visitVarInsn(ASTORE, 7);
            Label label34 = new Label();
            methodVisitor.visitLabel(label34);
            methodVisitor.visitLineNumber(987, label34);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/JdbcStatement");
            methodVisitor.visitVarInsn(ASTORE, 12);
            Label label35 = new Label();
            methodVisitor.visitLabel(label35);
            methodVisitor.visitLineNumber(988, label35);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getQueryAttributesBindings", "()Lcom/mysql/cj/QueryAttributesBindings;", false);
            methodVisitor.visitVarInsn(ALOAD, 12);
            methodVisitor.visitInvokeDynamicInsn("accept", "(Lcom/mysql/cj/jdbc/JdbcStatement;)Ljava/util/function/Consumer;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;", false), new Object[]{Type.getType("(Ljava/lang/Object;)V"), new Handle(Opcodes.H_INVOKESTATIC, "com/mysql/cj/jdbc/StatementImpl", "lambda$executeBatchUsingMultiQueries$0", "(Lcom/mysql/cj/jdbc/JdbcStatement;Lcom/mysql/cj/BindValue;)V", false), Type.getType("(Lcom/mysql/cj/BindValue;)V")});
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/QueryAttributesBindings", "runThroughAll", "(Ljava/util/function/Consumer;)V", true);
            Label label36 = new Label();
            methodVisitor.visitLabel(label36);
            methodVisitor.visitLineNumber(990, label36);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/StatementImpl");
            methodVisitor.visitVarInsn(LLOAD, 3);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "startQueryTimer", "(Lcom/mysql/cj/Query;J)Lcom/mysql/cj/CancelQueryTask;", false);
            methodVisitor.visitVarInsn(ASTORE, 8);
            Label label37 = new Label();
            methodVisitor.visitLabel(label37);
            methodVisitor.visitLineNumber(992, label37);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label38 = new Label();
            methodVisitor.visitLabel(label38);
            methodVisitor.visitLineNumber(994, label38);
            methodVisitor.visitVarInsn(ALOAD, 5);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcConnection", "getPropertySet", "()Lcom/mysql/cj/jdbc/JdbcPropertySet;", true);
            methodVisitor.visitFieldInsn(GETSTATIC, "com/mysql/cj/conf/PropertyKey", "characterEncoding", "Lcom/mysql/cj/conf/PropertyKey;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/jdbc/JdbcPropertySet", "getStringProperty", "(Lcom/mysql/cj/conf/PropertyKey;)Lcom/mysql/cj/conf/RuntimeProperty;", true);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            methodVisitor.visitVarInsn(ASTORE, 14);
            Label label39 = new Label();
            methodVisitor.visitLabel(label39);
            methodVisitor.visitLineNumber(996, label39);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitLdcInsn("utf");
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/util/StringUtils", "startsWithIgnoreCase", "(Ljava/lang/String;Ljava/lang/String;)Z", false);
            Label label40 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label40);
            methodVisitor.visitInsn(ICONST_3);
            Label label41 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label41);
            methodVisitor.visitLabel(label40);
            methodVisitor.visitLineNumber(997, label40);
            methodVisitor.visitFrame(Opcodes.F_FULL, 14, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/sql/Statement", "com/mysql/cj/CancelQueryTask", "[J", Opcodes.INTEGER, "java/lang/StringBuilder", "com/mysql/cj/jdbc/JdbcStatement", Opcodes.INTEGER, "java/lang/String"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "getServerSession", "()Lcom/mysql/cj/protocol/ServerSession;", false);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/protocol/ServerSession", "getCharsetSettings", "()Lcom/mysql/cj/CharsetSettings;", true);
            methodVisitor.visitVarInsn(ALOAD, 14);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/CharsetSettings", "isMultibyteCharset", "(Ljava/lang/String;)Z", true);
            Label label42 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label42);
            methodVisitor.visitInsn(ICONST_2);
            methodVisitor.visitJumpInsn(GOTO, label41);
            methodVisitor.visitLabel(label42);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitLabel(label41);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{Opcodes.INTEGER});
            methodVisitor.visitVarInsn(ISTORE, 15);
            Label label43 = new Label();
            methodVisitor.visitLabel(label43);
            methodVisitor.visitLineNumber(999, label43);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitVarInsn(ISTORE, 16);
            Label label44 = new Label();
            methodVisitor.visitLabel(label44);
            methodVisitor.visitLineNumber(1001, label44);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "doEscapeProcessing", "Z");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/Statement", "setEscapeProcessing", "(Z)V", true);
            Label label45 = new Label();
            methodVisitor.visitLabel(label45);
            methodVisitor.visitLineNumber(1003, label45);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "doEscapeProcessing", "Z");
            Label label46 = new Label();
            methodVisitor.visitJumpInsn(IFEQ, label46);
            Label label47 = new Label();
            methodVisitor.visitLabel(label47);
            methodVisitor.visitLineNumber(1004, label47);
            methodVisitor.visitInsn(ICONST_2);
            methodVisitor.visitVarInsn(ISTORE, 16);
            methodVisitor.visitLabel(label46);
            methodVisitor.visitLineNumber(1007, label46);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.INTEGER, Opcodes.INTEGER}, 0, null);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 17);
            Label label48 = new Label();
            methodVisitor.visitLabel(label48);
            methodVisitor.visitLineNumber(1009, label48);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 18);
            Label label49 = new Label();
            methodVisitor.visitLabel(label49);
            methodVisitor.visitLineNumber(1011, label49);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 10);
            Label label50 = new Label();
            methodVisitor.visitLabel(label50);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{"java/sql/SQLException", Opcodes.INTEGER}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitVarInsn(ILOAD, 2);
            Label label51 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPGE, label51);
            Label label52 = new Label();
            methodVisitor.visitLabel(label52);
            methodVisitor.visitLineNumber(1012, label52);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "query", "Lcom/mysql/cj/Query;");
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/Query", "getBatchedArgs", "()Ljava/util/List;", true);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/List", "get", "(I)Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/String");
            methodVisitor.visitVarInsn(ASTORE, 19);
            Label label53 = new Label();
            methodVisitor.visitLabel(label53);
            methodVisitor.visitLineNumber(1014, label53);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "length", "()I", false);
            methodVisitor.visitVarInsn(ALOAD, 19);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/String", "length", "()I", false);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ILOAD, 15);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitInsn(ICONST_4);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ILOAD, 16);
            methodVisitor.visitInsn(IMUL);
            methodVisitor.visitIntInsn(BIPUSH, 32);
            methodVisitor.visitInsn(IADD);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "maxAllowedPacket", "Lcom/mysql/cj/conf/RuntimeProperty;");
            Label label54 = new Label();
            methodVisitor.visitLabel(label54);
            methodVisitor.visitLineNumber(1015, label54);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "com/mysql/cj/conf/RuntimeProperty", "getValue", "()Ljava/lang/Object;", true);
            methodVisitor.visitTypeInsn(CHECKCAST, "java/lang/Integer");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/Integer", "intValue", "()I", false);
            Label label55 = new Label();
            methodVisitor.visitJumpInsn(IF_ICMPLE, label55);
            methodVisitor.visitLabel(label0);
            methodVisitor.visitLineNumber(1017, label0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/Statement", "execute", "(Ljava/lang/String;I)Z", true);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label1);
            methodVisitor.visitLineNumber(1020, label1);
            Label label56 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label56);
            methodVisitor.visitLabel(label2);
            methodVisitor.visitLineNumber(1018, label2);
            methodVisitor.visitFrame(Opcodes.F_FULL, 19, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/sql/Statement", "com/mysql/cj/CancelQueryTask", "[J", Opcodes.INTEGER, "java/lang/StringBuilder", "com/mysql/cj/jdbc/JdbcStatement", Opcodes.INTEGER, "java/lang/String", Opcodes.INTEGER, Opcodes.INTEGER, "java/sql/SQLException", Opcodes.INTEGER, "java/lang/String"}, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 20);
            Label label57 = new Label();
            methodVisitor.visitLabel(label57);
            methodVisitor.visitLineNumber(1019, label57);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitVarInsn(ILOAD, 18);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 20);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 17);
            methodVisitor.visitLabel(label56);
            methodVisitor.visitLineNumber(1022, label56);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/StatementImpl");
            methodVisitor.visitVarInsn(ILOAD, 13);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "processMultiCountsAndKeys", "(Lcom/mysql/cj/jdbc/StatementImpl;I[J)I", false);
            methodVisitor.visitVarInsn(ISTORE, 13);
            Label label58 = new Label();
            methodVisitor.visitLabel(label58);
            methodVisitor.visitLineNumber(1024, label58);
            methodVisitor.visitTypeInsn(NEW, "java/lang/StringBuilder");
            methodVisitor.visitInsn(DUP);
            methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/StringBuilder", "<init>", "()V", false);
            methodVisitor.visitVarInsn(ASTORE, 11);
            Label label59 = new Label();
            methodVisitor.visitLabel(label59);
            methodVisitor.visitLineNumber(1025, label59);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitVarInsn(ISTORE, 18);
            methodVisitor.visitLabel(label55);
            methodVisitor.visitLineNumber(1028, label55);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitVarInsn(ALOAD, 19);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitInsn(POP);
            Label label60 = new Label();
            methodVisitor.visitLabel(label60);
            methodVisitor.visitLineNumber(1029, label60);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitLdcInsn(";");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "append", "(Ljava/lang/String;)Ljava/lang/StringBuilder;", false);
            methodVisitor.visitInsn(POP);
            Label label61 = new Label();
            methodVisitor.visitLabel(label61);
            methodVisitor.visitLineNumber(1030, label61);
            methodVisitor.visitIincInsn(18, 1);
            Label label62 = new Label();
            methodVisitor.visitLabel(label62);
            methodVisitor.visitLineNumber(1011, label62);
            methodVisitor.visitIincInsn(10, 1);
            methodVisitor.visitJumpInsn(GOTO, label50);
            methodVisitor.visitLabel(label51);
            methodVisitor.visitLineNumber(1033, label51);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "length", "()I", false);
            Label label63 = new Label();
            methodVisitor.visitJumpInsn(IFLE, label63);
            methodVisitor.visitLabel(label3);
            methodVisitor.visitLineNumber(1035, label3);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitVarInsn(ALOAD, 11);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/lang/StringBuilder", "toString", "()Ljava/lang/String;", false);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/Statement", "execute", "(Ljava/lang/String;I)Z", true);
            methodVisitor.visitInsn(POP);
            methodVisitor.visitLabel(label4);
            methodVisitor.visitLineNumber(1038, label4);
            Label label64 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label64);
            methodVisitor.visitLabel(label5);
            methodVisitor.visitLineNumber(1036, label5);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/sql/SQLException"});
            methodVisitor.visitVarInsn(ASTORE, 19);
            Label label65 = new Label();
            methodVisitor.visitLabel(label65);
            methodVisitor.visitLineNumber(1037, label65);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ILOAD, 10);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ISUB);
            methodVisitor.visitVarInsn(ILOAD, 18);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 19);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "handleExceptionForBatch", "(II[JLjava/sql/SQLException;)Ljava/sql/SQLException;", false);
            methodVisitor.visitVarInsn(ASTORE, 17);
            methodVisitor.visitLabel(label64);
            methodVisitor.visitLineNumber(1040, label64);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitTypeInsn(CHECKCAST, "com/mysql/cj/jdbc/StatementImpl");
            methodVisitor.visitVarInsn(ILOAD, 13);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "processMultiCountsAndKeys", "(Lcom/mysql/cj/jdbc/StatementImpl;I[J)I", false);
            methodVisitor.visitVarInsn(ISTORE, 13);
            methodVisitor.visitLabel(label63);
            methodVisitor.visitLineNumber(1043, label63);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 8);
            Label label66 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label66);
            Label label67 = new Label();
            methodVisitor.visitLabel(label67);
            methodVisitor.visitLineNumber(1044, label67);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitInsn(ICONST_1);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label68 = new Label();
            methodVisitor.visitLabel(label68);
            methodVisitor.visitLineNumber(1045, label68);
            methodVisitor.visitInsn(ACONST_NULL);
            methodVisitor.visitVarInsn(ASTORE, 8);
            methodVisitor.visitLabel(label66);
            methodVisitor.visitLineNumber(1048, label66);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 17);
            Label label69 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label69);
            Label label70 = new Label();
            methodVisitor.visitLabel(label70);
            methodVisitor.visitLineNumber(1049, label70);
            methodVisitor.visitVarInsn(ALOAD, 17);
            methodVisitor.visitVarInsn(ALOAD, 9);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "getExceptionInterceptor", "()Lcom/mysql/cj/exceptions/ExceptionInterceptor;", false);
            methodVisitor.visitMethodInsn(INVOKESTATIC, "com/mysql/cj/jdbc/exceptions/SQLError", "createBatchUpdateException", "(Ljava/sql/SQLException;[JLcom/mysql/cj/exceptions/ExceptionInterceptor;)Ljava/sql/SQLException;", false);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label69);
            methodVisitor.visitLineNumber(1052, label69);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 9);
            Label label71 = new Label();
            methodVisitor.visitJumpInsn(IFNULL, label71);
            methodVisitor.visitVarInsn(ALOAD, 9);
            Label label72 = new Label();
            methodVisitor.visitJumpInsn(GOTO, label72);
            methodVisitor.visitLabel(label71);
            methodVisitor.visitFrame(Opcodes.F_SAME, 0, null, 0, null);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitIntInsn(NEWARRAY, T_LONG);
            methodVisitor.visitLabel(label72);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"[J"});
            methodVisitor.visitVarInsn(ASTORE, 19);
            methodVisitor.visitLabel(label11);
            methodVisitor.visitLineNumber(1054, label11);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label73 = new Label();
            methodVisitor.visitLabel(label73);
            methodVisitor.visitLineNumber(1055, label73);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "resetCancelledState", "()V", false);
            methodVisitor.visitLabel(label6);
            methodVisitor.visitLineNumber(1058, label6);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitJumpInsn(IFNULL, label7);
            Label label74 = new Label();
            methodVisitor.visitLabel(label74);
            methodVisitor.visitLineNumber(1059, label74);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/Statement", "close", "()V", true);
            methodVisitor.visitLabel(label7);
            methodVisitor.visitLineNumber(1062, label7);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"[J"}, 0, null);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label75 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label75);
            Label label76 = new Label();
            methodVisitor.visitLabel(label76);
            methodVisitor.visitLineNumber(1063, label76);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "disableMultiQueries", "()V", false);
            methodVisitor.visitJumpInsn(GOTO, label75);
            methodVisitor.visitLabel(label8);
            methodVisitor.visitLineNumber(1062, label8);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 21);
            methodVisitor.visitLabel(label9);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label77 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label77);
            Label label78 = new Label();
            methodVisitor.visitLabel(label78);
            methodVisitor.visitLineNumber(1063, label78);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "disableMultiQueries", "()V", false);
            methodVisitor.visitLabel(label77);
            methodVisitor.visitLineNumber(1065, label77);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 2, new Object[]{Opcodes.TOP, "java/lang/Throwable"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 21);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label75);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 2, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label19);
            methodVisitor.visitLineNumber(1052, label19);
            methodVisitor.visitVarInsn(ALOAD, 19);
            methodVisitor.visitInsn(ARETURN);
            methodVisitor.visitLabel(label12);
            methodVisitor.visitLineNumber(1054, label12);
            methodVisitor.visitFrame(Opcodes.F_FULL, 8, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/sql/Statement", "com/mysql/cj/CancelQueryTask"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 22);
            methodVisitor.visitLabel(label17);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitVarInsn(ALOAD, 8);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitInsn(ICONST_0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "stopQueryTimer", "(Lcom/mysql/cj/CancelQueryTask;ZZ)V", false);
            Label label79 = new Label();
            methodVisitor.visitLabel(label79);
            methodVisitor.visitLineNumber(1055, label79);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/jdbc/StatementImpl", "resetCancelledState", "()V", false);
            methodVisitor.visitLabel(label13);
            methodVisitor.visitLineNumber(1058, label13);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitJumpInsn(IFNULL, label14);
            Label label80 = new Label();
            methodVisitor.visitLabel(label80);
            methodVisitor.visitLineNumber(1059, label80);
            methodVisitor.visitVarInsn(ALOAD, 7);
            methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/sql/Statement", "close", "()V", true);
            methodVisitor.visitLabel(label14);
            methodVisitor.visitLineNumber(1062, label14);
            methodVisitor.visitFrame(Opcodes.F_FULL, 22, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object", "java/sql/Statement", "com/mysql/cj/CancelQueryTask", Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, Opcodes.TOP, "java/lang/Throwable"}, 0, new Object[]{});
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label81 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label81);
            Label label82 = new Label();
            methodVisitor.visitLabel(label82);
            methodVisitor.visitLineNumber(1063, label82);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "disableMultiQueries", "()V", false);
            methodVisitor.visitJumpInsn(GOTO, label81);
            methodVisitor.visitLabel(label15);
            methodVisitor.visitLineNumber(1062, label15);
            methodVisitor.visitFrame(Opcodes.F_SAME1, 0, null, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 23);
            methodVisitor.visitLabel(label16);
            methodVisitor.visitVarInsn(ILOAD, 1);
            Label label83 = new Label();
            methodVisitor.visitJumpInsn(IFNE, label83);
            Label label84 = new Label();
            methodVisitor.visitLabel(label84);
            methodVisitor.visitLineNumber(1063, label84);
            methodVisitor.visitVarInsn(ALOAD, 0);
            methodVisitor.visitFieldInsn(GETFIELD, "com/mysql/cj/jdbc/StatementImpl", "session", "Lcom/mysql/cj/NativeSession;");
            methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "com/mysql/cj/NativeSession", "disableMultiQueries", "()V", false);
            methodVisitor.visitLabel(label83);
            methodVisitor.visitLineNumber(1065, label83);
            methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{"java/lang/Throwable"}, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 23);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label81);
            methodVisitor.visitLineNumber(1066, label81);
            methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
            methodVisitor.visitVarInsn(ALOAD, 22);
            methodVisitor.visitInsn(ATHROW);
            methodVisitor.visitLabel(label20);
            methodVisitor.visitLineNumber(1067, label20);
            methodVisitor.visitFrame(Opcodes.F_FULL, 6, new Object[]{"com/mysql/cj/jdbc/StatementImpl", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.LONG, "com/mysql/cj/jdbc/JdbcConnection", "java/lang/Object"}, 1, new Object[]{"java/lang/Throwable"});
            methodVisitor.visitVarInsn(ASTORE, 24);
            methodVisitor.visitVarInsn(ALOAD, 6);
            methodVisitor.visitInsn(MONITOREXIT);
            methodVisitor.visitLabel(label21);
            methodVisitor.visitVarInsn(ALOAD, 24);
            methodVisitor.visitInsn(ATHROW);
            Label label85 = new Label();
            methodVisitor.visitLabel(label85);
            methodVisitor.visitLocalVariable("i", "I", null, label28, label29, 10);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label57, label56, 20);
            methodVisitor.visitLocalVariable("nextQuery", "Ljava/lang/String;", null, label53, label62, 19);
            methodVisitor.visitLocalVariable("ex", "Ljava/sql/SQLException;", null, label65, label64, 19);
            methodVisitor.visitLocalVariable("updateCounts", "[J", null, label27, label12, 9);
            methodVisitor.visitLocalVariable("commandIndex", "I", null, label32, label12, 10);
            methodVisitor.visitLocalVariable("queryBuf", "Ljava/lang/StringBuilder;", null, label33, label12, 11);
            methodVisitor.visitLocalVariable("jdbcBatchedStmt", "Lcom/mysql/cj/jdbc/JdbcStatement;", null, label35, label12, 12);
            methodVisitor.visitLocalVariable("counter", "I", null, label38, label12, 13);
            methodVisitor.visitLocalVariable("connectionEncoding", "Ljava/lang/String;", null, label39, label12, 14);
            methodVisitor.visitLocalVariable("numberOfBytesPerChar", "I", null, label43, label12, 15);
            methodVisitor.visitLocalVariable("escapeAdjust", "I", null, label44, label12, 16);
            methodVisitor.visitLocalVariable("sqlEx", "Ljava/sql/SQLException;", null, label48, label12, 17);
            methodVisitor.visitLocalVariable("argumentSetsInBatchSoFar", "I", null, label49, label12, 18);
            methodVisitor.visitLocalVariable("batchStmt", "Ljava/sql/Statement;", null, label26, label20, 7);
            methodVisitor.visitLocalVariable("timeoutTask", "Lcom/mysql/cj/CancelQueryTask;", null, label10, label20, 8);
            methodVisitor.visitLocalVariable("this", "Lcom/mysql/cj/jdbc/StatementImpl;", null, label22, label85, 0);
            methodVisitor.visitLocalVariable("multiQueriesEnabled", "Z", null, label22, label85, 1);
            methodVisitor.visitLocalVariable("nbrCommands", "I", null, label22, label85, 2);
            methodVisitor.visitLocalVariable("individualStatementTimeout", "J", null, label22, label85, 3);
            methodVisitor.visitLocalVariable("locallyScopedConn", "Lcom/mysql/cj/jdbc/JdbcConnection;", null, label23, label85, 5);
            methodVisitor.visitMaxs(5, 25);
            methodVisitor.visitEnd();
        }
    }
}
